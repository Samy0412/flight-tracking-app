{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExponentWebBrowser from \"./ExpoWebBrowser\";\nvar emptyCustomTabsPackages = {\n  defaultBrowserPackage: undefined,\n  preferredBrowserPackage: undefined,\n  browserPackages: [],\n  servicePackages: []\n};\nexport function getCustomTabsSupportingBrowsersAsync() {\n  return _regeneratorRuntime.async(function getCustomTabsSupportingBrowsersAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync) {\n            _context.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n        case 2:\n          if (!(Platform.OS !== 'android')) {\n            _context.next = 6;\n            break;\n          }\n          return _context.abrupt(\"return\", emptyCustomTabsPackages);\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync());\n        case 8:\n          return _context.abrupt(\"return\", _context.sent);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\nexport function warmUpAsync(browserPackage) {\n  return _regeneratorRuntime.async(function warmUpAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (ExponentWebBrowser.warmUpAsync) {\n            _context2.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'warmUpAsync');\n        case 2:\n          if (!(Platform.OS !== 'android')) {\n            _context2.next = 6;\n            break;\n          }\n          return _context2.abrupt(\"return\", {});\n        case 6:\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.warmUpAsync(browserPackage));\n        case 8:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\nexport function mayInitWithUrlAsync(url, browserPackage) {\n  return _regeneratorRuntime.async(function mayInitWithUrlAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (ExponentWebBrowser.mayInitWithUrlAsync) {\n            _context3.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n        case 2:\n          if (!(Platform.OS !== 'android')) {\n            _context3.next = 6;\n            break;\n          }\n          return _context3.abrupt(\"return\", {});\n        case 6:\n          _context3.next = 8;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.mayInitWithUrlAsync(url, browserPackage));\n        case 8:\n          return _context3.abrupt(\"return\", _context3.sent);\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n}\nexport function coolDownAsync(browserPackage) {\n  return _regeneratorRuntime.async(function coolDownAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (ExponentWebBrowser.coolDownAsync) {\n            _context4.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'coolDownAsync');\n        case 2:\n          if (!(Platform.OS !== 'android')) {\n            _context4.next = 6;\n            break;\n          }\n          return _context4.abrupt(\"return\", {});\n        case 6:\n          _context4.next = 8;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.coolDownAsync(browserPackage));\n        case 8:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n}\nexport function openBrowserAsync(url) {\n  var browserParams,\n    _args5 = arguments;\n  return _regeneratorRuntime.async(function openBrowserAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          browserParams = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n          if (ExponentWebBrowser.openBrowserAsync) {\n            _context5.next = 3;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'openBrowserAsync');\n        case 3:\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.openBrowserAsync(url, browserParams));\n        case 5:\n          return _context5.abrupt(\"return\", _context5.sent);\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n}\nexport function dismissBrowser() {\n  if (!ExponentWebBrowser.dismissBrowser) {\n    throw new UnavailabilityError('WebBrowser', 'dismissBrowser');\n  }\n  ExponentWebBrowser.dismissBrowser();\n}\nexport function openAuthSessionAsync(url, redirectUrl) {\n  return _regeneratorRuntime.async(function openAuthSessionAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!_authSessionIsNativelySupported()) {\n            _context6.next = 6;\n            break;\n          }\n          if (ExponentWebBrowser.openAuthSessionAsync) {\n            _context6.next = 3;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n        case 3:\n          return _context6.abrupt(\"return\", ExponentWebBrowser.openAuthSessionAsync(url, redirectUrl));\n        case 6:\n          return _context6.abrupt(\"return\", _openAuthSessionPolyfillAsync(url, redirectUrl));\n        case 7:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n}\nexport function dismissAuthSession() {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.dismissAuthSession) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissAuthSession();\n  } else {\n    if (!ExponentWebBrowser.dismissBrowser) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissBrowser();\n  }\n}\nfunction _authSessionIsNativelySupported() {\n  if (Platform.OS === 'android') {\n    return false;\n  }\n  var versionNumber = parseInt(String(Platform.Version), 10);\n  return versionNumber >= 11;\n}\nvar _redirectHandler = null;\nvar _onWebBrowserCloseAndroid = null;\nfunction _onAppStateChangeAndroid(state) {\n  if (state === 'active' && _onWebBrowserCloseAndroid) {\n    _onWebBrowserCloseAndroid();\n  }\n}\nfunction _openBrowserAndWaitAndroidAsync(startUrl) {\n  var appStateChangedToActive, result, _await$openBrowserAsy, type;\n  return _regeneratorRuntime.async(function _openBrowserAndWaitAndroidAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          appStateChangedToActive = new Promise(function (resolve) {\n            _onWebBrowserCloseAndroid = resolve;\n            AppState.addEventListener('change', _onAppStateChangeAndroid);\n          });\n          result = {\n            type: 'cancel'\n          };\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(openBrowserAsync(startUrl));\n        case 4:\n          _await$openBrowserAsy = _context7.sent;\n          type = _await$openBrowserAsy.type;\n          if (!(type === 'opened')) {\n            _context7.next = 10;\n            break;\n          }\n          _context7.next = 9;\n          return _regeneratorRuntime.awrap(appStateChangedToActive);\n        case 9:\n          result = {\n            type: 'dismiss'\n          };\n        case 10:\n          AppState.removeEventListener('change', _onAppStateChangeAndroid);\n          _onWebBrowserCloseAndroid = null;\n          return _context7.abrupt(\"return\", result);\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n}\nfunction _openAuthSessionPolyfillAsync(startUrl, returnUrl) {\n  return _regeneratorRuntime.async(function _openAuthSessionPolyfillAsync$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          if (!_redirectHandler) {\n            _context8.next = 2;\n            break;\n          }\n          throw new Error(\"The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be\");\n        case 2:\n          if (!_onWebBrowserCloseAndroid) {\n            _context8.next = 4;\n            break;\n          }\n          throw new Error(\"WebBrowser is already open, only one can be open at a time\");\n        case 4:\n          _context8.prev = 4;\n          if (!(Platform.OS === 'android')) {\n            _context8.next = 11;\n            break;\n          }\n          _context8.next = 8;\n          return _regeneratorRuntime.awrap(Promise.race([_openBrowserAndWaitAndroidAsync(startUrl), _waitForRedirectAsync(returnUrl)]));\n        case 8:\n          return _context8.abrupt(\"return\", _context8.sent);\n        case 11:\n          _context8.next = 13;\n          return _regeneratorRuntime.awrap(Promise.race([openBrowserAsync(startUrl), _waitForRedirectAsync(returnUrl)]));\n        case 13:\n          return _context8.abrupt(\"return\", _context8.sent);\n        case 14:\n          _context8.prev = 14;\n          if (ExponentWebBrowser.dismissBrowser) {\n            ExponentWebBrowser.dismissBrowser();\n          }\n          _stopWaitingForRedirect();\n          return _context8.finish(14);\n        case 18:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[4,, 14, 18]]);\n}\nfunction _stopWaitingForRedirect() {\n  if (!_redirectHandler) {\n    throw new Error(\"The WebBrowser auth session is in an invalid state with no redirect handler when one should be set\");\n  }\n  Linking.removeEventListener('url', _redirectHandler);\n  _redirectHandler = null;\n}\nfunction _waitForRedirectAsync(returnUrl) {\n  return new Promise(function (resolve) {\n    _redirectHandler = function _redirectHandler(event) {\n      if (event.url.startsWith(returnUrl)) {\n        resolve({\n          url: event.url,\n          type: 'success'\n        });\n      }\n    };\n    Linking.addEventListener('url', _redirectHandler);\n  });\n}","map":{"version":3,"names":["UnavailabilityError","ExponentWebBrowser","emptyCustomTabsPackages","defaultBrowserPackage","undefined","preferredBrowserPackage","browserPackages","servicePackages","getCustomTabsSupportingBrowsersAsync","_regeneratorRuntime","async","getCustomTabsSupportingBrowsersAsync$","_context","prev","next","Platform","OS","abrupt","awrap","sent","stop","warmUpAsync","browserPackage","warmUpAsync$","_context2","mayInitWithUrlAsync","url","mayInitWithUrlAsync$","_context3","coolDownAsync","coolDownAsync$","_context4","openBrowserAsync","browserParams","_args5","arguments","openBrowserAsync$","_context5","length","dismissBrowser","openAuthSessionAsync","redirectUrl","openAuthSessionAsync$","_context6","_authSessionIsNativelySupported","_openAuthSessionPolyfillAsync","dismissAuthSession","versionNumber","parseInt","String","Version","_redirectHandler","_onWebBrowserCloseAndroid","_onAppStateChangeAndroid","state","_openBrowserAndWaitAndroidAsync","startUrl","appStateChangedToActive","result","_await$openBrowserAsy","type","_openBrowserAndWaitAndroidAsync$","_context7","Promise","resolve","AppState","addEventListener","removeEventListener","returnUrl","_openAuthSessionPolyfillAsync$","_context8","Error","race","_waitForRedirectAsync","_stopWaitingForRedirect","finish","Linking","event","startsWith"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/expo-web-browser/src/WebBrowser.ts"],"sourcesContent":["import { AppState, Linking, Platform, AppStateStatus } from 'react-native';\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExponentWebBrowser from './ExpoWebBrowser';\n\nimport {\n  RedirectEvent,\n  OpenBrowserOptions,\n  AuthSessionResult,\n  CustomTabsBrowsersResults,\n  BrowserResult,\n  RedirectResult,\n  MayInitWithUrlResult,\n  WarmUpResult,\n  CoolDownResult,\n} from './WebBrowser.types';\n\nconst emptyCustomTabsPackages: CustomTabsBrowsersResults = {\n  defaultBrowserPackage: undefined,\n  preferredBrowserPackage: undefined,\n  browserPackages: [],\n  servicePackages: [],\n};\n\nexport async function getCustomTabsSupportingBrowsersAsync(): Promise<CustomTabsBrowsersResults> {\n  if (!ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync) {\n    throw new UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return emptyCustomTabsPackages;\n  } else {\n    return await ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync();\n  }\n}\n\nexport async function warmUpAsync(browserPackage?: string): Promise<WarmUpResult> {\n  if (!ExponentWebBrowser.warmUpAsync) {\n    throw new UnavailabilityError('WebBrowser', 'warmUpAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.warmUpAsync(browserPackage);\n  }\n}\n\nexport async function mayInitWithUrlAsync(\n  url: string,\n  browserPackage?: string\n): Promise<MayInitWithUrlResult> {\n  if (!ExponentWebBrowser.mayInitWithUrlAsync) {\n    throw new UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.mayInitWithUrlAsync(url, browserPackage);\n  }\n}\n\nexport async function coolDownAsync(browserPackage?: string): Promise<CoolDownResult> {\n  if (!ExponentWebBrowser.coolDownAsync) {\n    throw new UnavailabilityError('WebBrowser', 'coolDownAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.coolDownAsync(browserPackage);\n  }\n}\n\nexport async function openBrowserAsync(\n  url: string,\n  browserParams: OpenBrowserOptions = {}\n): Promise<BrowserResult> {\n  if (!ExponentWebBrowser.openBrowserAsync) {\n    throw new UnavailabilityError('WebBrowser', 'openBrowserAsync');\n  }\n  return await ExponentWebBrowser.openBrowserAsync(url, browserParams);\n}\n\nexport function dismissBrowser(): void {\n  if (!ExponentWebBrowser.dismissBrowser) {\n    throw new UnavailabilityError('WebBrowser', 'dismissBrowser');\n  }\n  ExponentWebBrowser.dismissBrowser();\n}\n\nexport async function openAuthSessionAsync(\n  url: string,\n  redirectUrl: string\n): Promise<AuthSessionResult> {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.openAuthSessionAsync) {\n      throw new UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n    }\n    return ExponentWebBrowser.openAuthSessionAsync(url, redirectUrl);\n  } else {\n    return _openAuthSessionPolyfillAsync(url, redirectUrl);\n  }\n}\n\nexport function dismissAuthSession(): void {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.dismissAuthSession) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissAuthSession();\n  } else {\n    if (!ExponentWebBrowser.dismissBrowser) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissBrowser();\n  }\n}\n\n/* iOS <= 10 and Android polyfill for SFAuthenticationSession flow */\n\nfunction _authSessionIsNativelySupported(): boolean {\n  if (Platform.OS === 'android') {\n    return false;\n  }\n\n  const versionNumber = parseInt(String(Platform.Version), 10);\n  return versionNumber >= 11;\n}\n\nlet _redirectHandler: ((event: RedirectEvent) => void) | null = null;\n\n/*\n * openBrowserAsync on Android doesn't wait until closed, so we need to polyfill\n * it with AppState\n */\n\n// Store the `resolve` function from a Promise to fire when the AppState\n// returns to active\nlet _onWebBrowserCloseAndroid: null | (() => void) = null;\n\nfunction _onAppStateChangeAndroid(state: AppStateStatus) {\n  if (state === 'active' && _onWebBrowserCloseAndroid) {\n    _onWebBrowserCloseAndroid();\n  }\n}\n\nasync function _openBrowserAndWaitAndroidAsync(startUrl: string): Promise<BrowserResult> {\n  let appStateChangedToActive = new Promise(resolve => {\n    _onWebBrowserCloseAndroid = resolve;\n    AppState.addEventListener('change', _onAppStateChangeAndroid);\n  });\n\n  let result: BrowserResult = { type: 'cancel' };\n  let { type } = await openBrowserAsync(startUrl);\n\n  if (type === 'opened') {\n    await appStateChangedToActive;\n    result = { type: 'dismiss' };\n  }\n\n  AppState.removeEventListener('change', _onAppStateChangeAndroid);\n  _onWebBrowserCloseAndroid = null;\n  return result;\n}\n\nasync function _openAuthSessionPolyfillAsync(\n  startUrl: string,\n  returnUrl: string\n): Promise<AuthSessionResult> {\n  if (_redirectHandler) {\n    throw new Error(\n      `The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be`\n    );\n  }\n\n  if (_onWebBrowserCloseAndroid) {\n    throw new Error(`WebBrowser is already open, only one can be open at a time`);\n  }\n\n  try {\n    if (Platform.OS === 'android') {\n      return await Promise.race([\n        _openBrowserAndWaitAndroidAsync(startUrl),\n        _waitForRedirectAsync(returnUrl),\n      ]);\n    } else {\n      return await Promise.race([openBrowserAsync(startUrl), _waitForRedirectAsync(returnUrl)]);\n    }\n  } finally {\n    // We can't dismiss the browser on Android, only call this when it's available.\n    // Users on Android need to manually press the 'x' button in Chrome Custom Tabs, sadly.\n    if (ExponentWebBrowser.dismissBrowser) {\n      ExponentWebBrowser.dismissBrowser();\n    }\n\n    _stopWaitingForRedirect();\n  }\n}\n\nfunction _stopWaitingForRedirect() {\n  if (!_redirectHandler) {\n    throw new Error(\n      `The WebBrowser auth session is in an invalid state with no redirect handler when one should be set`\n    );\n  }\n\n  Linking.removeEventListener('url', _redirectHandler);\n  _redirectHandler = null;\n}\n\nfunction _waitForRedirectAsync(returnUrl: string): Promise<RedirectResult> {\n  return new Promise(resolve => {\n    _redirectHandler = (event: RedirectEvent) => {\n      if (event.url.startsWith(returnUrl)) {\n        resolve({ url: event.url, type: 'success' });\n      }\n    };\n\n    Linking.addEventListener('url', _redirectHandler);\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}