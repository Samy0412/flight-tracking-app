{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/@expo/vector-icons/build/createIconSet.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Font from \"expo-font\";\nimport createIconSet from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\nimport createIconButtonComponent from \"./vendor/react-native-vector-icons/lib/icon-button\";\nexport { DEFAULT_ICON_COLOR, DEFAULT_ICON_SIZE } from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\nexport default function (glyphMap, fontName, expoAssetId, fontStyle) {\n  var _a;\n  var font = _defineProperty({}, fontName, expoAssetId);\n  var RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n  return _a = function (_React$Component) {\n    _inherits(Icon, _React$Component);\n    function Icon() {\n      var _this;\n      _classCallCheck(this, Icon);\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Icon).apply(this, arguments));\n      _this._mounted = false;\n      _this.state = {\n        fontIsLoaded: Font.isLoaded(fontName)\n      };\n      return _this;\n    }\n    _createClass(Icon, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        return _regeneratorRuntime.async(function componentDidMount$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._mounted = true;\n                if (this.state.fontIsLoaded) {\n                  _context.next = 5;\n                  break;\n                }\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(Font.loadAsync(font));\n              case 4:\n                this._mounted && this.setState({\n                  fontIsLoaded: true\n                });\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._mounted = false;\n      }\n    }, {\n      key: \"setNativeProps\",\n      value: function setNativeProps(props) {\n        if (this._icon) {\n          this._icon.setNativeProps(props);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        if (!this.state.fontIsLoaded) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            }\n          });\n        }\n        return React.createElement(RNVIconComponent, _extends({\n          ref: function ref(view) {\n            _this2._icon = view;\n          }\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          }\n        }));\n      }\n    }]);\n    return Icon;\n  }(React.Component), _a.propTypes = RNVIconComponent.propTypes, _a.defaultProps = RNVIconComponent.defaultProps, _a.Button = createIconButtonComponent(_a), _a.glyphMap = glyphMap, _a.getRawGlyphMap = function () {\n    return glyphMap;\n  }, _a.getFontFamily = function () {\n    return fontName;\n  }, _a.loadFont = function () {\n    return Font.loadAsync(font);\n  }, _a.font = font, _a;\n}","map":{"version":3,"names":["React","Text","Font","createIconSet","createIconButtonComponent","DEFAULT_ICON_COLOR","DEFAULT_ICON_SIZE","glyphMap","fontName","expoAssetId","fontStyle","font","_defineProperty","RNVIconComponent","_a","_React$Component","_inherits","Icon","_this","_classCallCheck","_mounted","state","fontIsLoaded","isLoaded","_createClass","key","value","componentDidMount","_regeneratorRuntime","async","componentDidMount$","_context","prev","next","awrap","loadAsync","setState","stop","componentWillUnmount","setNativeProps","props","_icon","render","_this2","createElement","__source","fileName","_jsxFileName","lineNumber","_extends","ref","view","Component","propTypes","defaultProps","Button","getRawGlyphMap","getFontFamily","loadFont"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/@expo/vector-icons/src/createIconSet.tsx"],"sourcesContent":["import React from \"react\";\nimport { Text } from \"react-native\";\nimport * as Font from \"expo-font\";\nimport createIconSet from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\nimport createIconButtonComponent from \"./vendor/react-native-vector-icons/lib/icon-button\";\n\nexport {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE\n} from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\n\nexport default function(glyphMap, fontName, expoAssetId, fontStyle?: any) {\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n\n  return class Icon extends React.Component {\n    static propTypes = RNVIconComponent.propTypes;\n    static defaultProps = RNVIconComponent.defaultProps;\n    static Button = createIconButtonComponent(Icon);\n    static glyphMap = glyphMap;\n    static getRawGlyphMap = () => glyphMap;\n    static getFontFamily = () => fontName;\n    static loadFont = () => Font.loadAsync(font);\n    static font = font;\n\n    _mounted = false;\n    _icon?: any;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName)\n    };\n\n    async componentDidMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={view => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE1B,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,aAAa;AACpB,OAAOC,yBAAyB;AAEhC,SACEC,kBAAkB,EAClBC,iBAAiB;AAGnB,eAAc,UAAUC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAe;;EACtE,IAAMC,IAAI,GAAAC,eAAA,KAAMJ,QAAQ,EAAGC,WAAW,CAAE;EACxC,IAAMI,gBAAgB,GAAGV,aAAa,CAACI,QAAQ,EAAEC,QAAQ,EAAE,IAAI,EAAEE,SAAS,CAAC;EAE3E,OAAAI,EAAA,aAAAC,gBAAA;IAAAC,SAAA,CAAAC,IAAA,EAAAF,gBAAA;IAAO,SAAAE,KAAA;MAAA,IAAAC,KAAA;MAAAC,eAAA,OAAAF,IAAA;;MAULC,KAAA,CAAAE,QAAQ,GAAG,KAAK;MAGhBF,KAAA,CAAAG,KAAK,GAAG;QACNC,YAAY,EAAEpB,IAAI,CAACqB,QAAQ,CAACf,QAAQ;OACrC;MAAC,OAAAU,KAAA;IAkCJ;IAACM,YAAA,CAAAP,IAAA;MAAAQ,GAAA;MAAAC,KAAA,WAAAC,kBAAA;QAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,mBAAAC,QAAA;UAAA;YAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBA/BG,IAAI,CAACb,QAAQ,GAAG,IAAI;gBAAC,IAChB,IAAI,CAACC,KAAK,CAACC,YAAY;kBAAAS,QAAA,CAAAE,IAAA;kBAAA;gBAAA;gBAAAF,QAAA,CAAAE,IAAA;gBAAA,OAAAL,mBAAA,CAAAM,KAAA,CACpBhC,IAAI,CAACiC,SAAS,CAACxB,IAAI,CAAC;cAAA;gBAC1B,IAAI,CAACS,QAAQ,IAAI,IAAI,CAACgB,QAAQ,CAAC;kBAAEd,YAAY,EAAE;gBAAI,CAAE,CAAC;cAAC;cAAA;gBAAA,OAAAS,QAAA,CAAAM,IAAA;YAAA;UAAA;QAAA;MAAA;IAAA;MAAAZ,GAAA;MAAAC,KAAA,WAAAY,qBAAA,EAIvC;QAClB,IAAI,CAAClB,QAAQ,GAAG,KAAK;MACvB;IAAC;MAAAK,GAAA;MAAAC,KAAA,WAAAa,eAEcC,KAAK;QAClB,IAAI,IAAI,CAACC,KAAK,EAAE;UACd,IAAI,CAACA,KAAK,CAACF,cAAc,CAACC,KAAK,CAAC;;MAEpC;IAAC;MAAAf,GAAA;MAAAC,KAAA,WAAAgB,OAAA,EAEK;QAAA,IAAAC,MAAA;QACJ,IAAI,CAAC,IAAI,CAACtB,KAAK,CAACC,YAAY,EAAE;UAC5B,OAAOtB,KAAA,CAAA4C,aAAA,CAAC3C,IAAI;YAAA4C,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;YAAA;UAAA,EAAG;;QAGjB,OACEhD,KAAA,CAAA4C,aAAA,CAAC/B,gBAAgB,EAAAoC,QAAA;UACfC,GAAG,EAAE,SAAAA,IAAAC,IAAI,EAAG;YACVR,MAAI,CAACF,KAAK,GAAGU,IAAI;UACnB;QAAE,GACE,IAAI,CAACX,KAAK;UAAAK,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;UAAA;QAAA,GACd;MAEN;IAAC;IAAA,OAAA/B,IAAA;EAAA,EAhDuBjB,KAAK,CAACoD,SAAS,CAiDxC,EAhDQtC,EAAA,CAAAuC,SAAS,GAAGxC,gBAAgB,CAACwC,SAAU,EACvCvC,EAAA,CAAAwC,YAAY,GAAGzC,gBAAgB,CAACyC,YAAa,EAC7CxC,EAAA,CAAAyC,MAAM,GAAGnD,yBAAyB,CAACU,EAAI,CAAE,EACzCA,EAAA,CAAAP,QAAQ,GAAGA,QAAS,EACpBO,EAAA,CAAA0C,cAAc,GAAG;IAAA,OAAMjD,QAAS;EAAA,GAChCO,EAAA,CAAA2C,aAAa,GAAG;IAAA,OAAMjD,QAAS;EAAA,GAC/BM,EAAA,CAAA4C,QAAQ,GAAG;IAAA,OAAMxD,IAAI,CAACiC,SAAS,CAACxB,IAAI,CAAE;EAAA,GACtCG,EAAA,CAAAH,IAAI,GAAGA,IAAK,E;AA0CvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}