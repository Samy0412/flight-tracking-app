{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-native-screens/src/screens.web.js\";\nimport debounce from 'debounce';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nvar _shouldUseScreens = true;\nexport function useScreens() {\n  var shouldUseScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  if (shouldUseScreens) {\n    console.warn('react-native-screens is not fully supported on this platform yet.');\n  }\n  _shouldUseScreens = shouldUseScreens;\n}\nexport function screensEnabled() {\n  return _shouldUseScreens;\n}\nfunction isAnimatedValue(value) {\n  return value && value.__getValue && value.addListener;\n}\nfunction isPropTruthy(prop) {\n  var activeValue = prop;\n  if (isAnimatedValue(prop)) {\n    activeValue = prop.__getValue();\n  }\n  return !!activeValue;\n}\nexport var Screen = function (_React$Component) {\n  _inherits(Screen, _React$Component);\n  function Screen(props) {\n    var _this;\n    _classCallCheck(this, Screen);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Screen).call(this, props));\n    _this.listenerId = null;\n    _this._addListener = function (possibleListener) {\n      if (_this.listenerId) throw new Error('Screen: Attempting to observe an animated value while another value is already observed.');\n      if (isAnimatedValue(possibleListener)) {\n        _this.listenerId = possibleListener.addListener(_this._onAnimatedValueUpdated);\n      }\n    };\n    _this._removeListener = function (possibleListener) {\n      if (isAnimatedValue(possibleListener)) {\n        possibleListener.removeListener(_this.listenerId);\n        _this.listenerId = null;\n      }\n    };\n    _this._onAnimatedValueUpdated = function (_ref) {\n      var value = _ref.value;\n      _this._updateDisplay(!!value);\n    };\n    _this._updateDisplay = function (isActive) {\n      if (isActive === undefined) {\n        isActive = isPropTruthy(_this.props.active);\n      }\n      var display = isActive ? 'flex' : 'none';\n      _this.setNativeProps({\n        style: {\n          display: display\n        }\n      });\n    };\n    _this.setNativeProps = function (nativeProps) {\n      if (_this._view) {\n        _this._view.setNativeProps(nativeProps);\n      }\n    };\n    _this._setRef = function (view) {\n      _this._view = view;\n      _this._updateDisplay();\n    };\n    _this._onAnimatedValueUpdated = debounce(_this._onAnimatedValueUpdated, 10);\n    _this._addListener(props.active);\n    return _this;\n  }\n  _createClass(Screen, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._removeListener(this.props.active);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref2) {\n      var nextActive = _ref2.active;\n      var active = this.props.active;\n      if (nextActive !== active) {\n        this._removeListener(active);\n        this._addListener(nextActive);\n        this._updateDisplay(isPropTruthy(nextActive));\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Animated.View, _extends({}, this.props, {\n        ref: this._setRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }));\n    }\n  }]);\n  return Screen;\n}(React.Component);\nScreen.defaultProps = {\n  active: true\n};\nexport var ScreenContainer = View;\nexport var NativeScreen = View;\nexport var NativeScreenContainer = View;","map":{"version":3,"names":["debounce","React","Animated","View","_shouldUseScreens","useScreens","shouldUseScreens","arguments","length","undefined","console","warn","screensEnabled","isAnimatedValue","value","__getValue","addListener","isPropTruthy","prop","activeValue","Screen","_React$Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","listenerId","_addListener","possibleListener","Error","_onAnimatedValueUpdated","_removeListener","removeListener","_ref","_updateDisplay","isActive","active","display","setNativeProps","style","nativeProps","_view","_setRef","view","_createClass","key","componentWillUnmount","shouldComponentUpdate","_ref2","nextActive","render","createElement","_extends","ref","__source","fileName","_jsxFileName","lineNumber","Component","defaultProps","ScreenContainer","NativeScreen","NativeScreenContainer"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-native-screens/src/screens.web.js"],"sourcesContent":["import debounce from 'debounce';\nimport React from 'react';\nimport { Animated, View } from 'react-native';\n\nlet _shouldUseScreens = true;\n\nexport function useScreens(shouldUseScreens = true) {\n  if (shouldUseScreens) {\n    console.warn(\n      'react-native-screens is not fully supported on this platform yet.'\n    );\n  }\n  _shouldUseScreens = shouldUseScreens;\n}\n\nexport function screensEnabled() {\n  return _shouldUseScreens;\n}\n\nfunction isAnimatedValue(value) {\n  return value && value.__getValue && value.addListener;\n}\n\nfunction isPropTruthy(prop) {\n  let activeValue = prop;\n  if (isAnimatedValue(prop)) {\n    activeValue = prop.__getValue();\n  }\n\n  return !!activeValue;\n}\n\nexport class Screen extends React.Component {\n  static defaultProps = {\n    active: true,\n  };\n\n  listenerId = null;\n\n  constructor(props) {\n    super(props);\n\n    this._onAnimatedValueUpdated = debounce(this._onAnimatedValueUpdated, 10);\n    this._addListener(props.active);\n  }\n\n  componentWillUnmount() {\n    this._removeListener(this.props.active);\n  }\n\n  _addListener = possibleListener => {\n    if (this.listenerId)\n      throw new Error(\n        'Screen: Attempting to observe an animated value while another value is already observed.'\n      );\n    if (isAnimatedValue(possibleListener)) {\n      this.listenerId = possibleListener.addListener(\n        this._onAnimatedValueUpdated\n      );\n    }\n  };\n\n  _removeListener = possibleListener => {\n    if (isAnimatedValue(possibleListener)) {\n      possibleListener.removeListener(this.listenerId);\n      this.listenerId = null;\n    }\n  };\n\n  shouldComponentUpdate({ active: nextActive }) {\n    const { active } = this.props;\n    if (nextActive !== active) {\n      this._removeListener(active);\n      this._addListener(nextActive);\n      this._updateDisplay(isPropTruthy(nextActive));\n      return false;\n    }\n    return true;\n  }\n\n  _onAnimatedValueUpdated = ({ value }) => {\n    this._updateDisplay(!!value);\n  };\n\n  _updateDisplay = isActive => {\n    if (isActive === undefined) {\n      isActive = isPropTruthy(this.props.active);\n    }\n    const display = isActive ? 'flex' : 'none';\n    this.setNativeProps({ style: { display } });\n  };\n\n  setNativeProps = nativeProps => {\n    if (this._view) {\n      this._view.setNativeProps(nativeProps);\n    }\n  };\n\n  _setRef = view => {\n    this._view = view;\n    this._updateDisplay();\n  };\n\n  render() {\n    return <Animated.View {...this.props} ref={this._setRef} />;\n  }\n}\n\nexport const ScreenContainer = View;\n\nexport const NativeScreen = View;\n\nexport const NativeScreenContainer = View;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}