{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-native-tab-view/src/TabBar.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableItem from \"./TouchableItem\";\nimport { SceneRendererPropType } from \"./PropTypes\";\nvar useNativeDriver = Boolean(NativeModules.NativeAnimatedModule);\nvar TabBar = function (_React$Component) {\n  _inherits(TabBar, _React$Component);\n  function TabBar(_props) {\n    var _this;\n    _classCallCheck(this, TabBar);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TabBar).call(this, _props));\n    _this._isIntial = true;\n    _this._isManualScroll = false;\n    _this._isMomentumScroll = false;\n    _this._startTrackingPosition = function () {\n      _this._offsetXListener = _this.props.offsetX.addListener(function (_ref) {\n        var value = _ref.value;\n        _this._lastOffsetX = value;\n        _this._handlePosition();\n      });\n      _this._panXListener = _this.props.panX.addListener(function (_ref2) {\n        var value = _ref2.value;\n        _this._lastPanX = value;\n        _this._handlePosition();\n      });\n    };\n    _this._stopTrackingPosition = function () {\n      _this.props.offsetX.removeListener(_this._offsetXListener);\n      _this.props.panX.removeListener(_this._panXListener);\n    };\n    _this._handlePosition = function () {\n      var _this$props = _this.props,\n        navigationState = _this$props.navigationState,\n        layout = _this$props.layout;\n      if (layout.width === 0) {\n        return;\n      }\n      var panX = typeof _this._lastPanX === 'number' ? _this._lastPanX : 0;\n      var offsetX = typeof _this._lastOffsetX === 'number' ? _this._lastOffsetX : -navigationState.index * layout.width;\n      var value = (panX + offsetX) / -(layout.width || 0.001);\n      _this._adjustScroll(value);\n    };\n    _this._renderLabel = function (scene) {\n      if (typeof _this.props.renderLabel !== 'undefined') {\n        return _this.props.renderLabel(scene);\n      }\n      var label = _this.props.getLabelText(scene);\n      if (typeof label !== 'string') {\n        return null;\n      }\n      return React.createElement(Animated.Text, {\n        style: [styles.tabLabel, _this.props.labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }, label);\n    };\n    _this._renderIndicator = function (props) {\n      if (typeof _this.props.renderIndicator !== 'undefined') {\n        return _this.props.renderIndicator(props);\n      }\n      var width = props.width,\n        position = props.position,\n        navigationState = props.navigationState;\n      var translateX = Animated.multiply(Animated.multiply(position.interpolate({\n        inputRange: [-1, navigationState.routes.length],\n        outputRange: [-1, navigationState.routes.length],\n        extrapolate: 'clamp'\n      }), width), I18nManager.isRTL ? -1 : 1);\n      return React.createElement(Animated.View, {\n        style: [styles.indicator, {\n          width: width,\n          transform: [{\n            translateX: translateX\n          }]\n        }, _this.props.indicatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      });\n    };\n    _this._getTabWidth = function (props) {\n      var layout = props.layout,\n        navigationState = props.navigationState,\n        tabStyle = props.tabStyle;\n      var flattened = StyleSheet.flatten(tabStyle);\n      if (flattened) {\n        switch (typeof flattened.width) {\n          case 'number':\n            return flattened.width;\n          case 'string':\n            if (flattened.width.endsWith('%')) {\n              var width = parseFloat(flattened.width);\n              if (Number.isFinite(width)) {\n                return layout.width * (width / 100);\n              }\n            }\n        }\n      }\n      if (props.scrollEnabled) {\n        return layout.width / 5 * 2;\n      }\n      return layout.width / navigationState.routes.length;\n    };\n    _this._handleTabPress = function (_ref3) {\n      var route = _ref3.route;\n      _this._pendingIndex = _this.props.navigationState.routes.indexOf(route);\n      if (_this.props.onTabPress) {\n        _this.props.onTabPress({\n          route: route\n        });\n      }\n      _this.props.jumpTo(route.key);\n    };\n    _this._handleTabLongPress = function (_ref4) {\n      var route = _ref4.route;\n      if (_this.props.onTabLongPress) {\n        _this.props.onTabLongPress({\n          route: route\n        });\n      }\n    };\n    _this._normalizeScrollValue = function (props, value) {\n      var layout = props.layout,\n        navigationState = props.navigationState;\n      var tabWidth = _this._getTabWidth(props);\n      var tabBarWidth = Math.max(tabWidth * navigationState.routes.length, layout.width);\n      var maxDistance = tabBarWidth - layout.width;\n      return Math.max(Math.min(value, maxDistance), 0);\n    };\n    _this._getScrollAmount = function (props, i) {\n      var layout = props.layout;\n      var tabWidth = _this._getTabWidth(props);\n      var centerDistance = tabWidth * (i + 1 / 2);\n      var scrollAmount = centerDistance - layout.width / 2;\n      return _this._normalizeScrollValue(props, scrollAmount);\n    };\n    _this._adjustScroll = function (value) {\n      if (_this.props.scrollEnabled) {\n        global.cancelAnimationFrame(_this._scrollResetCallback);\n        _this._scrollView && _this._scrollView.scrollTo({\n          x: _this._normalizeScrollValue(_this.props, _this._getScrollAmount(_this.props, value)),\n          animated: !_this._isIntial\n        });\n        _this._isIntial = false;\n      }\n    };\n    _this._resetScroll = function (value) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (_this.props.scrollEnabled) {\n        global.cancelAnimationFrame(_this._scrollResetCallback);\n        _this._scrollResetCallback = global.requestAnimationFrame(function () {\n          _this._scrollView && _this._scrollView.scrollTo({\n            x: _this._getScrollAmount(_this.props, value),\n            animated: animated\n          });\n        });\n      }\n    };\n    _this._handleBeginDrag = function () {\n      _this._isManualScroll = true;\n      _this._isMomentumScroll = false;\n    };\n    _this._handleEndDrag = function () {\n      global.requestAnimationFrame(function () {\n        if (_this._isMomentumScroll) {\n          return;\n        }\n        _this._isManualScroll = false;\n      });\n    };\n    _this._handleMomentumScrollBegin = function () {\n      _this._isMomentumScroll = true;\n    };\n    _this._handleMomentumScrollEnd = function () {\n      _this._isMomentumScroll = false;\n      _this._isManualScroll = false;\n    };\n    var initialVisibility = 1;\n    if (_this.props.scrollEnabled) {\n      var tabWidth = _this._getTabWidth(_this.props);\n      if (!tabWidth) {\n        initialVisibility = 0;\n      }\n    }\n    var initialOffset = _this.props.scrollEnabled && _this.props.layout.width ? {\n      x: _this._getScrollAmount(_this.props, _this.props.navigationState.index),\n      y: 0\n    } : undefined;\n    _this.state = {\n      visibility: new Animated.Value(initialVisibility),\n      scrollAmount: new Animated.Value(0),\n      initialOffset: initialOffset\n    };\n    return _this;\n  }\n  _createClass(TabBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.scrollEnabled && this._startTrackingPosition();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevTabWidth = this._getTabWidth(prevProps);\n      var currentTabWidth = this._getTabWidth(this.props);\n      var pendingIndex = typeof this._pendingIndex === 'number' ? this._pendingIndex : this.props.navigationState.index;\n      this._pendingIndex = null;\n      if (prevTabWidth !== currentTabWidth && currentTabWidth) {\n        this.state.visibility.setValue(1);\n      }\n      if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n        this._resetScroll(this.props.navigationState.index, false);\n      } else if (prevProps.navigationState.index !== pendingIndex) {\n        this._resetScroll(this.props.navigationState.index);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._stopTrackingPosition();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        position = _this$props2.position,\n        navigationState = _this$props2.navigationState,\n        scrollEnabled = _this$props2.scrollEnabled,\n        bounces = _this$props2.bounces;\n      var routes = navigationState.routes;\n      var tabWidth = this._getTabWidth(this.props);\n      var tabBarWidth = tabWidth * routes.length;\n      var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n        return i;\n      })));\n      var translateX = Animated.multiply(this.state.scrollAmount, -1);\n      return React.createElement(Animated.View, {\n        style: [styles.tabBar, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        }\n      }, React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.indicatorContainer, scrollEnabled ? {\n          width: tabBarWidth,\n          transform: [{\n            translateX: translateX\n          }]\n        } : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        }\n      }, this._renderIndicator(_objectSpread({}, this.props, {\n        width: tabWidth\n      }))), React.createElement(View, {\n        style: styles.scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        }\n      }, React.createElement(Animated.ScrollView, {\n        horizontal: true,\n        keyboardShouldPersistTaps: \"handled\",\n        scrollEnabled: scrollEnabled,\n        bounces: bounces,\n        alwaysBounceHorizontal: false,\n        scrollsToTop: false,\n        showsHorizontalScrollIndicator: false,\n        automaticallyAdjustContentInsets: false,\n        overScrollMode: \"never\",\n        contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],\n        scrollEventThrottle: 1,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: this.state.scrollAmount\n            }\n          }\n        }], {\n          useNativeDriver: useNativeDriver\n        }),\n        onScrollBeginDrag: this._handleBeginDrag,\n        onScrollEndDrag: this._handleEndDrag,\n        onMomentumScrollBegin: this._handleMomentumScrollBegin,\n        onMomentumScrollEnd: this._handleMomentumScrollEnd,\n        contentOffset: this.state.initialOffset,\n        ref: function ref(el) {\n          return _this2._scrollView = el && el.getNode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        }\n      }, routes.map(function (route, i) {\n        var outputRange = inputRange.map(function (inputIndex) {\n          return inputIndex === i ? 1 : 0.7;\n        });\n        var opacity = Animated.multiply(_this2.state.visibility, position.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        }));\n        var label = _this2._renderLabel({\n          route: route\n        });\n        var icon = _this2.props.renderIcon ? _this2.props.renderIcon({\n          route: route\n        }) : null;\n        var badge = _this2.props.renderBadge ? _this2.props.renderBadge({\n          route: route\n        }) : null;\n        var tabStyle = {};\n        tabStyle.opacity = opacity;\n        if (icon) {\n          if (label) {\n            tabStyle.paddingTop = 8;\n          } else {\n            tabStyle.padding = 12;\n          }\n        }\n        var passedTabStyle = StyleSheet.flatten(_this2.props.tabStyle);\n        var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;\n        var tabContainerStyle = {};\n        if (isWidthSet) {\n          tabStyle.width = tabWidth;\n        }\n        if (passedTabStyle && typeof passedTabStyle.flex === 'number') {\n          tabContainerStyle.flex = passedTabStyle.flex;\n        } else if (!isWidthSet) {\n          tabContainerStyle.flex = 1;\n        }\n        var accessibilityLabel = _this2.props.getAccessibilityLabel({\n          route: route\n        });\n        accessibilityLabel = typeof accessibilityLabel !== 'undefined' ? accessibilityLabel : _this2.props.getLabelText({\n          route: route\n        });\n        var isFocused = i === navigationState.index;\n        return React.createElement(TouchableItem, {\n          borderless: true,\n          key: route.key,\n          testID: _this2.props.getTestID({\n            route: route\n          }),\n          accessible: _this2.props.getAccessible({\n            route: route\n          }),\n          accessibilityLabel: accessibilityLabel,\n          accessibilityTraits: isFocused ? ['button', 'selected'] : 'button',\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          accessibilityStates: isFocused ? ['selected'] : [],\n          pressColor: _this2.props.pressColor,\n          pressOpacity: _this2.props.pressOpacity,\n          delayPressIn: 0,\n          onPress: function onPress() {\n            return _this2._handleTabPress({\n              route: route\n            });\n          },\n          onLongPress: function onLongPress() {\n            return _this2._handleTabLongPress({\n              route: route\n            });\n          },\n          style: tabContainerStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          }\n        }, React.createElement(View, {\n          pointerEvents: \"none\",\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.tabItem, tabStyle, passedTabStyle, styles.container],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          }\n        }, icon, label), badge ? React.createElement(Animated.View, {\n          style: [styles.badge, {\n            opacity: _this2.state.visibility\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506\n          }\n        }, badge) : null));\n      }))));\n    }\n  }]);\n  return TabBar;\n}(React.Component);\nTabBar.propTypes = _objectSpread({}, SceneRendererPropType, {\n  scrollEnabled: PropTypes.bool,\n  bounces: PropTypes.bool,\n  pressColor: TouchableItem.propTypes.pressColor,\n  pressOpacity: TouchableItem.propTypes.pressOpacity,\n  getLabelText: PropTypes.func,\n  getAccessible: PropTypes.func,\n  getAccessibilityLabel: PropTypes.func,\n  getTestID: PropTypes.func,\n  renderIcon: PropTypes.func,\n  renderLabel: PropTypes.func,\n  renderIndicator: PropTypes.func,\n  onTabPress: PropTypes.func,\n  onTabLongPress: PropTypes.func,\n  labelStyle: PropTypes.any,\n  style: PropTypes.any\n});\nTabBar.defaultProps = {\n  getLabelText: function getLabelText(_ref5) {\n    var route = _ref5.route;\n    return typeof route.title === 'string' ? route.title.toUpperCase() : route.title;\n  },\n  getAccessible: function getAccessible(_ref6) {\n    var route = _ref6.route;\n    return typeof route.accessible !== 'undefined' ? route.accessible : true;\n  },\n  getAccessibilityLabel: function getAccessibilityLabel(_ref7) {\n    var route = _ref7.route;\n    return route.accessibilityLabel;\n  },\n  getTestID: function getTestID(_ref8) {\n    var route = _ref8.route;\n    return route.testID;\n  }\n};\nexport { TabBar as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scroll: {\n    overflow: Platform.OS === 'web' ? 'auto' : 'scroll'\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth\n    },\n    zIndex: Platform.OS === 'android' ? 0 : 1\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap'\n  },\n  tabLabel: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    margin: 8\n  },\n  tabItem: {\n    flex: 1,\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2\n  }\n});","map":{"version":3,"names":["React","PropTypes","Animated","NativeModules","StyleSheet","View","ScrollView","Platform","I18nManager","TouchableItem","SceneRendererPropType","useNativeDriver","Boolean","NativeAnimatedModule","TabBar","_React$Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","_isIntial","_isManualScroll","_isMomentumScroll","_startTrackingPosition","_offsetXListener","offsetX","addListener","_ref","value","_lastOffsetX","_handlePosition","_panXListener","panX","_ref2","_lastPanX","_stopTrackingPosition","removeListener","_this$props","navigationState","layout","width","index","_adjustScroll","_renderLabel","scene","renderLabel","label","getLabelText","createElement","Text","style","styles","tabLabel","labelStyle","__source","fileName","_jsxFileName","lineNumber","_renderIndicator","renderIndicator","position","translateX","multiply","interpolate","inputRange","routes","length","outputRange","extrapolate","isRTL","indicator","transform","indicatorStyle","_getTabWidth","tabStyle","flattened","flatten","endsWith","parseFloat","Number","isFinite","scrollEnabled","_handleTabPress","_ref3","route","_pendingIndex","indexOf","onTabPress","jumpTo","key","_handleTabLongPress","_ref4","onTabLongPress","_normalizeScrollValue","tabWidth","tabBarWidth","Math","max","maxDistance","min","_getScrollAmount","i","centerDistance","scrollAmount","global","cancelAnimationFrame","_scrollResetCallback","_scrollView","scrollTo","x","animated","_resetScroll","arguments","undefined","requestAnimationFrame","_handleBeginDrag","_handleEndDrag","_handleMomentumScrollBegin","_handleMomentumScrollEnd","initialVisibility","initialOffset","y","state","visibility","Value","_createClass","componentDidMount","componentDidUpdate","prevProps","prevTabWidth","currentTabWidth","pendingIndex","setValue","componentWillUnmount","render","_this2","_this$props2","bounces","concat","_toConsumableArray","map","tabBar","pointerEvents","indicatorContainer","_objectSpread","scroll","horizontal","keyboardShouldPersistTaps","alwaysBounceHorizontal","scrollsToTop","showsHorizontalScrollIndicator","automaticallyAdjustContentInsets","overScrollMode","contentContainerStyle","tabContent","container","scrollEventThrottle","onScroll","event","nativeEvent","contentOffset","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","ref","el","getNode","inputIndex","opacity","icon","renderIcon","badge","renderBadge","paddingTop","padding","passedTabStyle","isWidthSet","tabContainerStyle","flex","accessibilityLabel","getAccessibilityLabel","isFocused","borderless","testID","getTestID","accessible","getAccessible","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","pressColor","pressOpacity","delayPressIn","onPress","onLongPress","tabItem","Component","propTypes","bool","func","any","defaultProps","_ref5","title","toUpperCase","_ref6","_ref7","_ref8","default","create","overflow","OS","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","height","zIndex","flexDirection","flexWrap","color","margin","alignItems","justifyContent","top","right","left","bottom"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-native-tab-view/src/TabBar.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  NativeModules,\n  StyleSheet,\n  View,\n  ScrollView,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport TouchableItem from './TouchableItem';\nimport { SceneRendererPropType } from './PropTypes';\nimport type { Scene, SceneRendererProps } from './TypeDefinitions';\nimport type {\n  ViewStyleProp,\n  TextStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype IndicatorProps<T> = SceneRendererProps<T> & {\n  width: number,\n};\n\ntype Props<T> = SceneRendererProps<T> & {\n  scrollEnabled?: boolean,\n  bounces?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  getLabelText: (scene: Scene<T>) => ?string,\n  getAccessible: (scene: Scene<T>) => ?boolean,\n  getAccessibilityLabel: (scene: Scene<T>) => ?string,\n  getTestID: (scene: Scene<T>) => ?string,\n  renderLabel?: (scene: Scene<T>) => React.Node,\n  renderIcon?: (scene: Scene<T>) => React.Node,\n  renderBadge?: (scene: Scene<T>) => React.Node,\n  renderIndicator?: (props: IndicatorProps<T>) => React.Node,\n  onTabPress?: (scene: Scene<T>) => mixed,\n  onTabLongPress?: (scene: Scene<T>) => mixed,\n  tabStyle?: ViewStyleProp,\n  indicatorStyle?: ViewStyleProp,\n  labelStyle?: TextStyleProp,\n  style?: ViewStyleProp,\n};\n\ntype State = {|\n  visibility: Animated.Value,\n  scrollAmount: Animated.Value,\n  initialOffset: ?{| x: number, y: number |},\n|};\n\nconst useNativeDriver = Boolean(NativeModules.NativeAnimatedModule);\n\nexport default class TabBar<T: *> extends React.Component<Props<T>, State> {\n  static propTypes = {\n    ...SceneRendererPropType,\n    scrollEnabled: PropTypes.bool,\n    bounces: PropTypes.bool,\n    pressColor: TouchableItem.propTypes.pressColor,\n    pressOpacity: TouchableItem.propTypes.pressOpacity,\n    getLabelText: PropTypes.func,\n    getAccessible: PropTypes.func,\n    getAccessibilityLabel: PropTypes.func,\n    getTestID: PropTypes.func,\n    renderIcon: PropTypes.func,\n    renderLabel: PropTypes.func,\n    renderIndicator: PropTypes.func,\n    onTabPress: PropTypes.func,\n    onTabLongPress: PropTypes.func,\n    labelStyle: PropTypes.any,\n    style: PropTypes.any,\n  };\n\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<T>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<T>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<T>) => route.accessibilityLabel,\n    getTestID: ({ route }: Scene<T>) => route.testID,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    let initialVisibility = 1;\n\n    if (this.props.scrollEnabled) {\n      const tabWidth = this._getTabWidth(this.props);\n      if (!tabWidth) {\n        initialVisibility = 0;\n      }\n    }\n\n    const initialOffset =\n      this.props.scrollEnabled && this.props.layout.width\n        ? {\n            x: this._getScrollAmount(\n              this.props,\n              this.props.navigationState.index\n            ),\n            y: 0,\n          }\n        : undefined;\n\n    this.state = {\n      visibility: new Animated.Value(initialVisibility),\n      scrollAmount: new Animated.Value(0),\n      initialOffset,\n    };\n  }\n\n  componentDidMount() {\n    this.props.scrollEnabled && this._startTrackingPosition();\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const prevTabWidth = this._getTabWidth(prevProps);\n    const currentTabWidth = this._getTabWidth(this.props);\n    const pendingIndex =\n      typeof this._pendingIndex === 'number'\n        ? this._pendingIndex\n        : this.props.navigationState.index;\n\n    this._pendingIndex = null;\n\n    if (prevTabWidth !== currentTabWidth && currentTabWidth) {\n      this.state.visibility.setValue(1);\n    }\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._resetScroll(this.props.navigationState.index, false);\n    } else if (prevProps.navigationState.index !== pendingIndex) {\n      this._resetScroll(this.props.navigationState.index);\n    }\n  }\n\n  componentWillUnmount() {\n    this._stopTrackingPosition();\n  }\n\n  _scrollView: ?ScrollView;\n  _isIntial: boolean = true;\n  _isManualScroll: boolean = false;\n  _isMomentumScroll: boolean = false;\n  _pendingIndex: ?number;\n  _scrollResetCallback: any;\n  _lastPanX: ?number;\n  _lastOffsetX: ?number;\n  _panXListener: string;\n  _offsetXListener: string;\n\n  _startTrackingPosition = () => {\n    this._offsetXListener = this.props.offsetX.addListener(({ value }) => {\n      this._lastOffsetX = value;\n      this._handlePosition();\n    });\n    this._panXListener = this.props.panX.addListener(({ value }) => {\n      this._lastPanX = value;\n      this._handlePosition();\n    });\n  };\n\n  _stopTrackingPosition = () => {\n    this.props.offsetX.removeListener(this._offsetXListener);\n    this.props.panX.removeListener(this._panXListener);\n  };\n\n  _handlePosition = () => {\n    const { navigationState, layout } = this.props;\n\n    if (layout.width === 0) {\n      // Don't do anything if we don't have layout yet\n      return;\n    }\n\n    const panX = typeof this._lastPanX === 'number' ? this._lastPanX : 0;\n    const offsetX =\n      typeof this._lastOffsetX === 'number'\n        ? this._lastOffsetX\n        : -navigationState.index * layout.width;\n\n    const value = (panX + offsetX) / -(layout.width || 0.001);\n\n    this._adjustScroll(value);\n  };\n\n  _renderLabel = (scene: Scene<*>) => {\n    if (typeof this.props.renderLabel !== 'undefined') {\n      return this.props.renderLabel(scene);\n    }\n    const label = this.props.getLabelText(scene);\n    if (typeof label !== 'string') {\n      return null;\n    }\n    return (\n      <Animated.Text style={[styles.tabLabel, this.props.labelStyle]}>\n        {label}\n      </Animated.Text>\n    );\n  };\n\n  _renderIndicator = (props: IndicatorProps<T>) => {\n    if (typeof this.props.renderIndicator !== 'undefined') {\n      return this.props.renderIndicator(props);\n    }\n    const { width, position, navigationState } = props;\n    const translateX = Animated.multiply(\n      Animated.multiply(\n        position.interpolate({\n          inputRange: [-1, navigationState.routes.length],\n          outputRange: [-1, navigationState.routes.length],\n          extrapolate: 'clamp',\n        }),\n        width\n      ),\n      I18nManager.isRTL ? -1 : 1\n    );\n    return (\n      <Animated.View\n        style={[\n          styles.indicator,\n          { width, transform: [{ translateX }] },\n          this.props.indicatorStyle,\n        ]}\n      />\n    );\n  };\n\n  _getTabWidth = props => {\n    const { layout, navigationState, tabStyle } = props;\n    const flattened = StyleSheet.flatten(tabStyle);\n\n    if (flattened) {\n      switch (typeof flattened.width) {\n        case 'number':\n          return flattened.width;\n        case 'string':\n          if (flattened.width.endsWith('%')) {\n            const width = parseFloat(flattened.width);\n            if (Number.isFinite(width)) {\n              return layout.width * (width / 100);\n            }\n          }\n      }\n    }\n\n    if (props.scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / navigationState.routes.length;\n  };\n\n  _handleTabPress = ({ route }: Scene<*>) => {\n    this._pendingIndex = this.props.navigationState.routes.indexOf(route);\n\n    if (this.props.onTabPress) {\n      this.props.onTabPress({ route });\n    }\n\n    this.props.jumpTo(route.key);\n  };\n\n  _handleTabLongPress = ({ route }: Scene<*>) => {\n    if (this.props.onTabLongPress) {\n      this.props.onTabLongPress({ route });\n    }\n  };\n\n  _normalizeScrollValue = (props, value) => {\n    const { layout, navigationState } = props;\n    const tabWidth = this._getTabWidth(props);\n    const tabBarWidth = Math.max(\n      tabWidth * navigationState.routes.length,\n      layout.width\n    );\n    const maxDistance = tabBarWidth - layout.width;\n\n    return Math.max(Math.min(value, maxDistance), 0);\n  };\n\n  _getScrollAmount = (props, i) => {\n    const { layout } = props;\n    const tabWidth = this._getTabWidth(props);\n    const centerDistance = tabWidth * (i + 1 / 2);\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this._normalizeScrollValue(props, scrollAmount);\n  };\n\n  _adjustScroll = (value: number) => {\n    if (this.props.scrollEnabled) {\n      global.cancelAnimationFrame(this._scrollResetCallback);\n      this._scrollView &&\n        this._scrollView.scrollTo({\n          x: this._normalizeScrollValue(\n            this.props,\n            this._getScrollAmount(this.props, value)\n          ),\n          animated: !this._isIntial, // Disable animation for the initial render\n        });\n\n      this._isIntial = false;\n    }\n  };\n\n  _resetScroll = (value: number, animated = true) => {\n    if (this.props.scrollEnabled) {\n      global.cancelAnimationFrame(this._scrollResetCallback);\n      this._scrollResetCallback = global.requestAnimationFrame(() => {\n        this._scrollView &&\n          this._scrollView.scrollTo({\n            x: this._getScrollAmount(this.props, value),\n            animated,\n          });\n      });\n    }\n  };\n\n  _handleBeginDrag = () => {\n    // onScrollBeginDrag fires when user touches the ScrollView\n    this._isManualScroll = true;\n    this._isMomentumScroll = false;\n  };\n\n  _handleEndDrag = () => {\n    // onScrollEndDrag fires when user lifts his finger\n    // onMomentumScrollBegin fires after touch end\n    // run the logic in next frame so we get onMomentumScrollBegin first\n    global.requestAnimationFrame(() => {\n      if (this._isMomentumScroll) {\n        return;\n      }\n      this._isManualScroll = false;\n    });\n  };\n\n  _handleMomentumScrollBegin = () => {\n    // onMomentumScrollBegin fires on flick, as well as programmatic scroll\n    this._isMomentumScroll = true;\n  };\n\n  _handleMomentumScrollEnd = () => {\n    // onMomentumScrollEnd fires when the scroll finishes\n    this._isMomentumScroll = false;\n    this._isManualScroll = false;\n  };\n\n  render() {\n    const { position, navigationState, scrollEnabled, bounces } = this.props;\n    const { routes } = navigationState;\n    const tabWidth = this._getTabWidth(this.props);\n    const tabBarWidth = tabWidth * routes.length;\n\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const translateX = Animated.multiply(this.state.scrollAmount, -1);\n\n    return (\n      <Animated.View style={[styles.tabBar, this.props.style]}>\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled\n              ? { width: tabBarWidth, transform: [{ translateX }] }\n              : null,\n          ]}\n        >\n          {this._renderIndicator({\n            ...this.props,\n            width: tabWidth,\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled ? null : styles.container,\n            ]}\n            scrollEventThrottle={1}\n            onScroll={Animated.event(\n              [\n                {\n                  nativeEvent: {\n                    contentOffset: { x: this.state.scrollAmount },\n                  },\n                },\n              ],\n              { useNativeDriver }\n            )}\n            onScrollBeginDrag={this._handleBeginDrag}\n            onScrollEndDrag={this._handleEndDrag}\n            onMomentumScrollBegin={this._handleMomentumScrollBegin}\n            onMomentumScrollEnd={this._handleMomentumScrollEnd}\n            contentOffset={this.state.initialOffset}\n            ref={el => (this._scrollView = el && el.getNode())}\n          >\n            {routes.map((route, i) => {\n              const outputRange = inputRange.map(\n                inputIndex => (inputIndex === i ? 1 : 0.7)\n              );\n              const opacity = Animated.multiply(\n                this.state.visibility,\n                position.interpolate({\n                  inputRange,\n                  outputRange,\n                })\n              );\n              const label = this._renderLabel({ route });\n              const icon = this.props.renderIcon\n                ? this.props.renderIcon({ route })\n                : null;\n              const badge = this.props.renderBadge\n                ? this.props.renderBadge({ route })\n                : null;\n\n              const tabStyle = {};\n\n              tabStyle.opacity = opacity;\n\n              if (icon) {\n                if (label) {\n                  tabStyle.paddingTop = 8;\n                } else {\n                  tabStyle.padding = 12;\n                }\n              }\n\n              const passedTabStyle = StyleSheet.flatten(this.props.tabStyle);\n              const isWidthSet =\n                (passedTabStyle &&\n                  typeof passedTabStyle.width !== 'undefined') ||\n                scrollEnabled === true;\n              const tabContainerStyle = {};\n\n              if (isWidthSet) {\n                tabStyle.width = tabWidth;\n              }\n\n              if (passedTabStyle && typeof passedTabStyle.flex === 'number') {\n                tabContainerStyle.flex = passedTabStyle.flex;\n              } else if (!isWidthSet) {\n                tabContainerStyle.flex = 1;\n              }\n\n              let accessibilityLabel = this.props.getAccessibilityLabel({\n                route,\n              });\n\n              accessibilityLabel =\n                typeof accessibilityLabel !== 'undefined'\n                  ? accessibilityLabel\n                  : this.props.getLabelText({ route });\n\n              const isFocused = i === navigationState.index;\n\n              return (\n                <TouchableItem\n                  borderless\n                  key={route.key}\n                  testID={this.props.getTestID({ route })}\n                  accessible={this.props.getAccessible({ route })}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityTraits={\n                    isFocused ? ['button', 'selected'] : 'button'\n                  }\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                  accessibilityStates={isFocused ? ['selected'] : []}\n                  pressColor={this.props.pressColor}\n                  pressOpacity={this.props.pressOpacity}\n                  delayPressIn={0}\n                  onPress={() => this._handleTabPress({ route })}\n                  onLongPress={() => this._handleTabLongPress({ route })}\n                  style={tabContainerStyle}\n                >\n                  <View pointerEvents=\"none\" style={styles.container}>\n                    <Animated.View\n                      style={[\n                        styles.tabItem,\n                        tabStyle,\n                        passedTabStyle,\n                        styles.container,\n                      ]}\n                    >\n                      {icon}\n                      {label}\n                    </Animated.View>\n                    {badge ? (\n                      <Animated.View\n                        style={[\n                          styles.badge,\n                          { opacity: this.state.visibility },\n                        ]}\n                      >\n                        {badge}\n                      </Animated.View>\n                    ) : null}\n                  </View>\n                </TouchableItem>\n              );\n            })}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.OS === 'web' ? ('auto': any) : 'scroll',\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n    },\n    // We don't need zIndex on Android, disable it since it's buggy\n    zIndex: Platform.OS === 'android' ? 0 : 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  tabLabel: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    margin: 8,\n  },\n  tabItem: {\n    flex: 1,\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}