{"ast":null,"code":"var _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/navigation/MainTabNavigator.js\";\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createStackNavigator, createBottomTabNavigator } from 'react-navigation';\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ArrivalScreen from \"../screens/ArrivalScreen\";\nimport DepartureScreen from \"../screens/DepartureScreen\";\nimport PopModal from \"../components/PopModal\";\nimport FlightMapScreen from \"../screens/FlightMapScreen\";\nimport SearchModal from \"../components/SearchModal\";\nvar config = Platform.select({\n  web: {\n    headerMode: 'screen'\n  },\n  default: {}\n});\nvar navigateRoute = function navigateRoute(navigation, label, rotate) {\n  var tabBarVisible;\n  if (navigation.state.routes.length > 1) {\n    navigation.state.routes.map(function (route) {\n      if (route.routeName === 'FlightMap' || route.routeName === 'Search' || route.routeName === 'PopModal') {\n        tabBarVisible = false;\n      } else {\n        tabBarVisible = true;\n      }\n    });\n  }\n  return {\n    tabBarVisible: tabBarVisible,\n    tabBarLabel: label,\n    tabBarIcon: function tabBarIcon(_ref) {\n      var focused = _ref.focused;\n      return React.createElement(TabBarIcon, {\n        focused: focused,\n        name: Platform.OS === 'ios' ? 'ios-airplane' : 'md-airplane',\n        rotate: rotate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      });\n    },\n    tabBarOptions: {\n      activeTintColor: '#000'\n    }\n  };\n};\nexport var HomeStack = createStackNavigator({\n  Home: HomeScreen\n}, config);\nHomeStack.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return navigateRoute(navigation, 'Home', '45deg');\n};\nHomeStack.path = '';\nvar FlightMapStack = createStackNavigator({\n  FlightMap: FlightMapScreen\n}, config);\nFlightMapStack.navigationOptions = {\n  tabBarLabel: 'Flight Map',\n  tabBarOptions: {\n    activeTintColor: '#000'\n  }\n};\nvar ArrivalStack = createStackNavigator({\n  Arrivals: ArrivalScreen,\n  PopModal: PopModal,\n  Search: SearchModal,\n  FlightMap: FlightMapScreen\n}, {\n  mode: 'modal'\n});\nArrivalStack.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  return navigateRoute(navigation, 'Arrival', '45deg');\n};\nArrivalScreen.path = '';\nvar DepartureStack = createStackNavigator({\n  Departure: DepartureScreen,\n  PopModal: PopModal,\n  Search: SearchModal,\n  FlightMap: FlightMapScreen\n}, {\n  mode: 'modal'\n});\nDepartureStack.navigationOptions = function (_ref4) {\n  var navigation = _ref4.navigation;\n  return navigateRoute(navigation, 'Departure', '-45deg');\n};\nDepartureScreen.path = '';\nexport var BottomTabNavigator = createBottomTabNavigator({\n  ArrivalStack: ArrivalStack,\n  DepartureStack: DepartureStack\n});\nBottomTabNavigator.path = '';","map":{"version":3,"names":["React","Platform","createStackNavigator","createBottomTabNavigator","TabBarIcon","HomeScreen","ArrivalScreen","DepartureScreen","PopModal","FlightMapScreen","SearchModal","config","select","web","headerMode","default","navigateRoute","navigation","label","rotate","tabBarVisible","state","routes","length","map","route","routeName","tabBarLabel","tabBarIcon","_ref","focused","createElement","name","OS","__source","fileName","_jsxFileName","lineNumber","tabBarOptions","activeTintColor","HomeStack","Home","navigationOptions","_ref2","path","FlightMapStack","FlightMap","ArrivalStack","Arrivals","Search","mode","_ref3","DepartureStack","Departure","_ref4","BottomTabNavigator"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/navigation/MainTabNavigator.js"],"sourcesContent":["import React from 'react'\nimport { Platform } from 'react-native'\nimport {\n  createStackNavigator,\n  createBottomTabNavigator,\n} from 'react-navigation'\n\nimport TabBarIcon from '../components/TabBarIcon'\nimport HomeScreen from '../screens/HomeScreen'\nimport ArrivalScreen from '../screens/ArrivalScreen'\nimport DepartureScreen from '../screens/DepartureScreen'\nimport PopModal from '../components/PopModal'\nimport FlightMapScreen from '../screens/FlightMapScreen'\nimport SearchModal from '../components/SearchModal'\n\nconst config = Platform.select({\n  web: { headerMode: 'screen' },\n  default: {},\n})\n\nconst navigateRoute = (navigation, label, rotate) => {\n  let tabBarVisible\n  if (navigation.state.routes.length > 1) {\n    navigation.state.routes.map(route => {\n      if (\n        route.routeName === 'FlightMap' ||\n        route.routeName === 'Search' ||\n        route.routeName === 'PopModal'\n      ) {\n        tabBarVisible = false\n      } else {\n        tabBarVisible = true\n      }\n    })\n  }\n\n  return {\n    tabBarVisible,\n    tabBarLabel: label,\n    tabBarIcon: ({ focused }) => (\n      <TabBarIcon\n        focused={focused}\n        name={Platform.OS === 'ios' ? 'ios-airplane' : 'md-airplane'}\n        rotate={rotate}\n      />\n    ),\n    tabBarOptions: { activeTintColor: '#000' },\n  }\n}\n\nexport const HomeStack = createStackNavigator(\n  {\n    Home: HomeScreen,\n  },\n  config\n)\n\nHomeStack.navigationOptions = ({ navigation }) => {\n  return navigateRoute(navigation, 'Home', '45deg')\n}\n\nHomeStack.path = ''\n\nconst FlightMapStack = createStackNavigator(\n  {\n    FlightMap: FlightMapScreen,\n  },\n  config\n)\n\nFlightMapStack.navigationOptions = {\n  tabBarLabel: 'Flight Map',\n  tabBarOptions: { activeTintColor: '#000' },\n}\n\nconst ArrivalStack = createStackNavigator(\n  {\n    Arrivals: ArrivalScreen,\n    PopModal: PopModal,\n    Search: SearchModal,\n    FlightMap: FlightMapScreen,\n  },\n  {\n    mode: 'modal',\n  }\n)\n\nArrivalStack.navigationOptions = ({ navigation }) => {\n  return navigateRoute(navigation, 'Arrival', '45deg')\n}\n\nArrivalScreen.path = ''\n\nconst DepartureStack = createStackNavigator(\n  {\n    Departure: DepartureScreen,\n    PopModal: PopModal,\n    Search: SearchModal,\n    FlightMap: FlightMapScreen,\n  },\n  {\n    mode: 'modal',\n  }\n)\nDepartureStack.navigationOptions = ({ navigation }) => {\n  return navigateRoute(navigation, 'Departure', '-45deg')\n}\n\nDepartureScreen.path = ''\n\n\nexport const BottomTabNavigator = createBottomTabNavigator({\n  ArrivalStack,\n  DepartureStack,\n})\n\nBottomTabNavigator.path = ''\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}