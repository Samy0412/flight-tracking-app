{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-tabs/src/views/BottomTabBar.js\";\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ThemeColors, ThemeContext } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nimport withDimensions from \"../utils/withDimensions\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar TouchableWithoutFeedbackWrapper = function (_React$Component) {\n  _inherits(TouchableWithoutFeedbackWrapper, _React$Component);\n  function TouchableWithoutFeedbackWrapper() {\n    _classCallCheck(this, TouchableWithoutFeedbackWrapper);\n    return _possibleConstructorReturn(this, _getPrototypeOf(TouchableWithoutFeedbackWrapper).apply(this, arguments));\n  }\n  _createClass(TouchableWithoutFeedbackWrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        onPress = _this$props.onPress,\n        onLongPress = _this$props.onLongPress,\n        testID = _this$props.testID,\n        accessibilityLabel = _this$props.accessibilityLabel,\n        accessibilityRole = _this$props.accessibilityRole,\n        accessibilityStates = _this$props.accessibilityStates,\n        props = _objectWithoutProperties(_this$props, [\"onPress\", \"onLongPress\", \"testID\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityStates\"]);\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        onLongPress: onLongPress,\n        testID: testID,\n        hitSlop: {\n          left: 15,\n          right: 15,\n          top: 0,\n          bottom: 5\n        },\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: accessibilityRole,\n        accessibilityStates: accessibilityStates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, React.createElement(View, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      })));\n    }\n  }]);\n  return TouchableWithoutFeedbackWrapper;\n}(React.Component);\nvar TabBarBottom = function (_React$Component2) {\n  _inherits(TabBarBottom, _React$Component2);\n  function TabBarBottom() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, TabBarBottom);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarBottom)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      layout: {\n        height: 0,\n        width: 0\n      },\n      keyboard: false,\n      visible: new Animated.Value(1)\n    };\n    _this._handleKeyboardShow = function () {\n      return _this.setState({\n        keyboard: true\n      }, function () {\n        return Animated.timing(_this.state.visible, {\n          toValue: 0,\n          duration: 150,\n          useNativeDriver: true\n        }).start();\n      });\n    };\n    _this._handleKeyboardHide = function () {\n      return Animated.timing(_this.state.visible, {\n        toValue: 1,\n        duration: 100,\n        useNativeDriver: true\n      }).start(function () {\n        _this.setState({\n          keyboard: false\n        });\n      });\n    };\n    _this._handleLayout = function (e) {\n      var layout = _this.state.layout;\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n      _this.setState({\n        layout: {\n          height: height,\n          width: width\n        }\n      });\n    };\n    _this._getActiveTintColor = function () {\n      var activeTintColor = _this.props.activeTintColor;\n      if (!activeTintColor) {\n        return;\n      } else if (typeof activeTintColor === 'string') {\n        return activeTintColor;\n      }\n      return activeTintColor[_this.context];\n    };\n    _this._getInactiveTintColor = function () {\n      var inactiveTintColor = _this.props.inactiveTintColor;\n      if (!inactiveTintColor) {\n        return;\n      } else if (typeof inactiveTintColor === 'string') {\n        return inactiveTintColor;\n      }\n      return inactiveTintColor[_this.context];\n    };\n    _this._getActiveBackgroundColor = function () {\n      var activeBackgroundColor = _this.props.activeBackgroundColor;\n      if (!activeBackgroundColor) {\n        return;\n      } else if (typeof activeBackgroundColor === 'string') {\n        return activeBackgroundColor;\n      }\n      return activeBackgroundColor[_this.context];\n    };\n    _this._getInactiveBackgroundColor = function () {\n      var inactiveBackgroundColor = _this.props.inactiveBackgroundColor;\n      if (!inactiveBackgroundColor) {\n        return;\n      } else if (typeof inactiveBackgroundColor === 'string') {\n        return inactiveBackgroundColor;\n      }\n      return inactiveBackgroundColor[_this.context];\n    };\n    _this._renderLabel = function (_ref) {\n      var route = _ref.route,\n        focused = _ref.focused;\n      var _this$props2 = _this.props,\n        labelStyle = _this$props2.labelStyle,\n        showLabel = _this$props2.showLabel,\n        showIcon = _this$props2.showIcon,\n        allowFontScaling = _this$props2.allowFontScaling;\n      if (showLabel === false) {\n        return null;\n      }\n      var activeTintColor = _this._getActiveTintColor();\n      var inactiveTintColor = _this._getInactiveTintColor();\n      var label = _this.props.getLabelText({\n        route: route\n      });\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color: tintColor\n          }, showIcon && _this._shouldUseHorizontalLabels() ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          }\n        }, label);\n      }\n      if (typeof label === 'function') {\n        return label({\n          route: route,\n          focused: focused,\n          tintColor: tintColor\n        });\n      }\n      return label;\n    };\n    _this._renderIcon = function (_ref2) {\n      var route = _ref2.route,\n        focused = _ref2.focused;\n      var _this$props3 = _this.props,\n        navigation = _this$props3.navigation,\n        renderIcon = _this$props3.renderIcon,\n        showIcon = _this$props3.showIcon,\n        showLabel = _this$props3.showLabel;\n      if (showIcon === false) {\n        return null;\n      }\n      var horizontal = _this._shouldUseHorizontalLabels();\n      var activeTintColor = _this._getActiveTintColor();\n      var inactiveTintColor = _this._getInactiveTintColor();\n      var activeOpacity = focused ? 1 : 0;\n      var inactiveOpacity = focused ? 0 : 1;\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        horizontal: horizontal,\n        navigation: navigation,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        }\n      });\n    };\n    _this._shouldUseHorizontalLabels = function () {\n      var routes = _this.props.navigation.state.routes;\n      var _this$props4 = _this.props,\n        isLandscape = _this$props4.isLandscape,\n        dimensions = _this$props4.dimensions,\n        adaptive = _this$props4.adaptive,\n        tabStyle = _this$props4.tabStyle;\n      if (!adaptive) {\n        return false;\n      }\n      if (Platform.isPad) {\n        var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n        var flattenedStyle = StyleSheet.flatten(tabStyle);\n        if (flattenedStyle) {\n          if (typeof flattenedStyle.width === 'number') {\n            maxTabItemWidth = flattenedStyle.width;\n          } else if (typeof flattenedStyle.maxWidth === 'number') {\n            maxTabItemWidth = flattenedStyle.maxWidth;\n          }\n        }\n        return routes.length * maxTabItemWidth <= dimensions.width;\n      } else {\n        return isLandscape;\n      }\n    };\n    return _this;\n  }\n  _createClass(TabBarBottom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props5 = this.props,\n        navigation = _this$props5.navigation,\n        keyboardHidesTabBar = _this$props5.keyboardHidesTabBar,\n        onTabPress = _this$props5.onTabPress,\n        onTabLongPress = _this$props5.onTabLongPress,\n        safeAreaInset = _this$props5.safeAreaInset,\n        style = _this$props5.style,\n        tabStyle = _this$props5.tabStyle;\n      var routes = navigation.state.routes;\n      var isDark = this.context === 'dark';\n      var activeBackgroundColor = this._getActiveBackgroundColor();\n      var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n      var tabBarStyle = [styles.tabBar, isDark ? styles.tabBarDark : styles.tabBarLight, this._shouldUseHorizontalLabels() && !Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n      return React.createElement(Animated.View, {\n        style: [styles.container, keyboardHidesTabBar ? {\n          transform: [{\n            translateY: this.state.visible.interpolate({\n              inputRange: [0, 1],\n              outputRange: [this.state.layout.height, 0]\n            })\n          }],\n          position: this.state.keyboard ? 'absolute' : null\n        } : null],\n        pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',\n        onLayout: this._handleLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        }\n      }, React.createElement(SafeAreaView, {\n        style: tabBarStyle,\n        forceInset: safeAreaInset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        }\n      }, routes.map(function (route, index) {\n        var focused = index === navigation.state.index;\n        var scene = {\n          route: route,\n          focused: focused\n        };\n        var accessibilityLabel = _this2.props.getAccessibilityLabel({\n          route: route\n        });\n        var accessibilityRole = _this2.props.getAccessibilityRole({\n          route: route\n        });\n        var accessibilityStates = _this2.props.getAccessibilityStates(scene);\n        var testID = _this2.props.getTestID({\n          route: route\n        });\n        var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n        var ButtonComponent = _this2.props.getButtonComponent({\n          route: route\n        }) || TouchableWithoutFeedbackWrapper;\n        return React.createElement(ButtonComponent, {\n          key: route.key,\n          onPress: function onPress() {\n            return onTabPress({\n              route: route\n            });\n          },\n          onLongPress: function onLongPress() {\n            return onTabLongPress({\n              route: route\n            });\n          },\n          testID: testID,\n          accessibilityLabel: accessibilityLabel,\n          accessibilityRole: accessibilityRole,\n          accessibilityStates: accessibilityStates,\n          style: [styles.tab, {\n            backgroundColor: backgroundColor\n          }, _this2._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          }\n        }, _this2._renderIcon(scene), _this2._renderLabel(scene));\n      })));\n    }\n  }]);\n  return TabBarBottom;\n}(React.Component);\nTabBarBottom.contextType = ThemeContext;\nTabBarBottom.defaultProps = {\n  keyboardHidesTabBar: false,\n  activeTintColor: {\n    light: '#007AFF',\n    dark: '#fff'\n  },\n  inactiveTintColor: {\n    light: '#8e8e93',\n    dark: '#7f7f7f'\n  },\n  activeBackgroundColor: 'transparent',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11,\n  safeAreaInset: {\n    bottom: 'always',\n    top: 'never'\n  }\n};\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row'\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 15\n  }\n});\nexport default withDimensions(TabBarBottom);","map":{"version":3,"names":["React","Animated","TouchableWithoutFeedback","StyleSheet","View","Keyboard","Platform","ThemeColors","ThemeContext","SafeAreaView","CrossFadeIcon","withDimensions","majorVersion","parseInt","Version","isIos","OS","isIOS11","DEFAULT_MAX_TAB_ITEM_WIDTH","TouchableWithoutFeedbackWrapper","_React$Component","_inherits","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_createClass","key","value","render","_this$props","props","onPress","onLongPress","testID","accessibilityLabel","accessibilityRole","accessibilityStates","_objectWithoutProperties","createElement","hitSlop","left","right","top","bottom","__source","fileName","_jsxFileName","lineNumber","_extends","Component","TabBarBottom","_React$Component2","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","layout","height","width","keyboard","visible","Value","_handleKeyboardShow","setState","timing","toValue","duration","useNativeDriver","start","_handleKeyboardHide","_handleLayout","e","_e$nativeEvent$layout","nativeEvent","_getActiveTintColor","activeTintColor","context","_getInactiveTintColor","inactiveTintColor","_getActiveBackgroundColor","activeBackgroundColor","_getInactiveBackgroundColor","inactiveBackgroundColor","_renderLabel","_ref","route","focused","_this$props2","labelStyle","showLabel","showIcon","allowFontScaling","label","getLabelText","tintColor","Text","numberOfLines","style","styles","color","_shouldUseHorizontalLabels","labelBeside","labelBeneath","_renderIcon","_ref2","_this$props3","navigation","renderIcon","horizontal","activeOpacity","inactiveOpacity","iconWithExplicitHeight","iconWithoutLabel","iconWithLabel","routes","_this$props4","isLandscape","dimensions","adaptive","tabStyle","isPad","maxTabItemWidth","flattenedStyle","flatten","maxWidth","componentDidMount","addListener","componentWillUnmount","removeListener","_this2","_this$props5","keyboardHidesTabBar","onTabPress","onTabLongPress","safeAreaInset","isDark","tabBarStyle","tabBar","tabBarDark","tabBarLight","tabBarCompact","tabBarRegular","container","transform","translateY","interpolate","inputRange","outputRange","position","pointerEvents","onLayout","forceInset","map","index","scene","getAccessibilityLabel","getAccessibilityRole","getAccessibilityStates","getTestID","backgroundColor","ButtonComponent","getButtonComponent","tab","tabLandscape","tabPortrait","contextType","defaultProps","light","dark","DEFAULT_HEIGHT","COMPACT_HEIGHT","create","borderTopWidth","hairlineWidth","flexDirection","header","borderTopColor","headerBorder","elevation","flex","alignItems","justifyContent","textAlign","fontSize","marginBottom","marginLeft"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-tabs/src/views/BottomTabBar.js"],"sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Keyboard,\n  Platform,\n} from 'react-native';\nimport { ThemeColors, ThemeContext } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\n\nimport CrossFadeIcon from './CrossFadeIcon';\nimport withDimensions from '../utils/withDimensions';\n\nexport type ThemedColor = {\n  light: string,\n  dark: string,\n};\n\nexport type TabBarOptions = {\n  keyboardHidesTabBar: boolean,\n  activeTintColor?: string | ThemedColor,\n  inactiveTintColor?: string | ThemedColor,\n  activeBackgroundColor?: string | ThemedColor,\n  inactiveBackgroundColor?: string | ThemedColor,\n  allowFontScaling: boolean,\n  showLabel: boolean,\n  showIcon: boolean,\n  labelStyle: any,\n  tabStyle: any,\n  adaptive?: boolean,\n  style: any,\n};\n\ntype Props = TabBarOptions & {\n  navigation: any,\n  descriptors: any,\n  jumpTo: any,\n  onTabPress: any,\n  onTabLongPress: any,\n  getAccessibilityLabel: (props: { route: any }) => string,\n  getAccessibilityRole: (props: { route: any }) => string,\n  getAccessibilityStates: (props: { route: any }) => string[],\n  getButtonComponent: ({ route: any }) => any,\n  getLabelText: ({ route: any }) => any,\n  getTestID: (props: { route: any }) => string,\n  renderIcon: any,\n  dimensions: { width: number, height: number },\n  isLandscape: boolean,\n  safeAreaInset: { top: string, right: string, bottom: string, left: string },\n};\n\ntype State = {\n  layout: { height: number, width: number },\n  keyboard: boolean,\n  visible: Animated.Value,\n};\n\nconst majorVersion = parseInt(Platform.Version, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\n\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nclass TouchableWithoutFeedbackWrapper extends React.Component<*> {\n  render() {\n    const {\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates,\n      ...props\n    } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPress}\n        onLongPress={onLongPress}\n        testID={testID}\n        hitSlop={{ left: 15, right: 15, top: 0, bottom: 5 }}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityStates={accessibilityStates}\n      >\n        <View {...props} />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nclass TabBarBottom extends React.Component<Props, State> {\n  static contextType = ThemeContext;\n\n  static defaultProps = {\n    keyboardHidesTabBar: false,\n    activeTintColor: {\n      light: '#007AFF',\n      dark: '#fff',\n    },\n    inactiveTintColor: {\n      light: '#8e8e93',\n      dark: '#7f7f7f',\n    },\n    activeBackgroundColor: 'transparent',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: { bottom: 'always', top: 'never' },\n  };\n\n  state = {\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  _handleKeyboardShow = () =>\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start()\n    );\n\n  _handleKeyboardHide = () =>\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n\n  _handleLayout = e => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  _getActiveTintColor = () => {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  };\n\n  _getInactiveTintColor = () => {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  };\n\n  _getActiveBackgroundColor = () => {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  };\n\n  _getInactiveBackgroundColor = () => {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  };\n\n  _renderLabel = ({ route, focused }) => {\n    const { labelStyle, showLabel, showIcon, allowFontScaling } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const label = this.props.getLabelText({ route });\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color: tintColor },\n            showIcon && this._shouldUseHorizontalLabels()\n              ? styles.labelBeside\n              : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({ route, focused, tintColor });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({ route, focused }) => {\n    const { navigation, renderIcon, showIcon, showLabel } = this.props;\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        horizontal={horizontal}\n        navigation={navigation}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _shouldUseHorizontalLabels = () => {\n    const { routes } = this.props.navigation.state;\n    const { isLandscape, dimensions, adaptive, tabStyle } = this.props;\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (Platform.isPad) {\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle,\n    } = this.props;\n\n    const { routes } = navigation.state;\n    const isDark = this.context === 'dark';\n\n    const activeBackgroundColor = this._getActiveBackgroundColor();\n    const inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    const tabBarStyle = [\n      styles.tabBar,\n      isDark ? styles.tabBarDark : styles.tabBarLight,\n      this._shouldUseHorizontalLabels() && !Platform.isPad\n        ? styles.tabBarCompact\n        : styles.tabBarRegular,\n      style,\n    ];\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          keyboardHidesTabBar\n            ? {\n                // When the keyboard is shown, slide down the tab bar\n                transform: [\n                  {\n                    translateY: this.state.visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [this.state.layout.height, 0],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: this.state.keyboard ? 'absolute' : null,\n              }\n            : null,\n        ]}\n        pointerEvents={\n          keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n        }\n        onLayout={this._handleLayout}\n      >\n        <SafeAreaView style={tabBarStyle} forceInset={safeAreaInset}>\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, focused };\n            const accessibilityLabel = this.props.getAccessibilityLabel({\n              route,\n            });\n\n            const accessibilityRole = this.props.getAccessibilityRole({\n              route,\n            });\n\n            const accessibilityStates = this.props.getAccessibilityStates(\n              scene\n            );\n\n            const testID = this.props.getTestID({ route });\n\n            const backgroundColor = focused\n              ? activeBackgroundColor\n              : inactiveBackgroundColor;\n\n            const ButtonComponent =\n              this.props.getButtonComponent({ route }) ||\n              TouchableWithoutFeedbackWrapper;\n\n            return (\n              <ButtonComponent\n                key={route.key}\n                onPress={() => onTabPress({ route })}\n                onLongPress={() => onTabLongPress({ route })}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                accessibilityRole={accessibilityRole}\n                accessibilityStates={accessibilityStates}\n                style={[\n                  styles.tab,\n                  { backgroundColor },\n                  this._shouldUseHorizontalLabels()\n                    ? styles.tabLandscape\n                    : styles.tabPortrait,\n                  tabStyle,\n                ]}\n              >\n                {this._renderIcon(scene)}\n                {this._renderLabel(scene)}\n              </ButtonComponent>\n            );\n          })}\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row',\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder,\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder,\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8,\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT,\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 15,\n  },\n});\n\nexport default withDimensions(TabBarBottom);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}