{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Constants from 'expo-constants';\nimport qs from 'qs';\nimport Linking from \"./LinkingModule\";\nvar manifest = Constants.manifest;\nvar USES_CUSTOM_SCHEME = Constants.appOwnership === 'standalone' && manifest.scheme;\nvar HOST_URI = manifest.hostUri;\nif (!HOST_URI && !USES_CUSTOM_SCHEME) {\n  HOST_URI = _removeScheme(Constants.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n}\nvar IS_EXPO_HOSTED = HOST_URI && (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(HOST_URI) || manifest.developer);\nfunction _removeScheme(url) {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\nfunction _removePort(url) {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\nfunction _removeLeadingSlash(url) {\n  return url.replace(/^\\//, '');\n}\nfunction _removeTrailingSlash(url) {\n  return url.replace(/\\/$/, '');\n}\nfunction _removeTrailingSlashAndQueryString(url) {\n  return url.replace(/\\/?\\?.*$/, '');\n}\nfunction makeUrl() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var scheme = 'exp';\n  if (Constants.appOwnership === 'standalone') {\n    scheme = manifest.scheme || manifest.detach && manifest.detach.scheme;\n  }\n  if (!scheme) {\n    throw new Error('Cannot make a deep link into a standalone app with no custom scheme defined');\n  }\n  var hostUri = HOST_URI || '';\n  if (USES_CUSTOM_SCHEME && IS_EXPO_HOSTED) {\n    hostUri = '';\n  }\n  if (path) {\n    if (IS_EXPO_HOSTED && hostUri) {\n      path = \"/--/\" + _removeLeadingSlash(path);\n    }\n    if (!path.startsWith('/') && hostUri) {\n      path = \"/\" + path;\n    } else if (path.startsWith('/') && !hostUri) {\n      path = path.substr(1);\n    }\n  } else {\n    path = '';\n  }\n  var queryString = '';\n  var queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    var paramsFromHostUri = {};\n    try {\n      var parsedParams = qs.parse(queryString);\n      if (typeof parsedParams === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch (e) {}\n    queryParams = _objectSpread({}, queryParams, {}, paramsFromHostUri);\n  }\n  queryString = qs.stringify(queryParams);\n  if (queryString) {\n    queryString = \"?\" + queryString;\n  }\n  hostUri = _removeTrailingSlash(hostUri);\n  return encodeURI(scheme + \"://\" + hostUri + path + queryString);\n}\nfunction parse(url) {\n  if (!url) {\n    throw new Error('parse cannot be called with a null value');\n  }\n  var decodedUrl = _removePort(decodeURI(url));\n  var path;\n  var queryParams = {};\n  var queryStringMatchResult = decodedUrl.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    decodedUrl = queryStringMatchResult[1];\n    queryParams = qs.parse(queryStringMatchResult[2]);\n  }\n  var hostUri = HOST_URI || '';\n  var hostUriStripped = _removePort(_removeTrailingSlashAndQueryString(hostUri));\n  if (hostUriStripped && decodedUrl.indexOf(hostUriStripped) > -1) {\n    path = decodedUrl.substr(decodedUrl.indexOf(hostUriStripped) + hostUriStripped.length);\n  } else {\n    path = _removeScheme(decodedUrl);\n  }\n  path = _removeLeadingSlash(path);\n  if (IS_EXPO_HOSTED && !USES_CUSTOM_SCHEME && path.startsWith('--/')) {\n    path = path.substr(3);\n  } else if (path.indexOf('+') > -1) {\n    path = path.substr(path.indexOf('+') + 1);\n  }\n  return {\n    path: path,\n    queryParams: queryParams\n  };\n}\nfunction parseInitialURLAsync() {\n  var initialUrl;\n  return _regeneratorRuntime.async(function parseInitialURLAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Linking.getInitialURL());\n        case 2:\n          initialUrl = _context.sent;\n          if (initialUrl) {\n            _context.next = 5;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            path: null,\n            queryParams: null\n          });\n        case 5:\n          return _context.abrupt(\"return\", parse(initialUrl));\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\nvar newLinking = new Linking.constructor();\nnewLinking.makeUrl = makeUrl;\nnewLinking.parse = parse;\nnewLinking.parseInitialURLAsync = parseInitialURLAsync;\nexport default newLinking;","map":{"version":3,"names":["Constants","qs","Linking","manifest","USES_CUSTOM_SCHEME","appOwnership","scheme","HOST_URI","hostUri","_removeScheme","linkingUri","replace","IS_EXPO_HOSTED","test","developer","url","_removePort","_removeLeadingSlash","_removeTrailingSlash","_removeTrailingSlashAndQueryString","makeUrl","path","arguments","length","undefined","queryParams","detach","Error","startsWith","substr","queryString","queryStringMatchResult","match","paramsFromHostUri","parsedParams","parse","e","_objectSpread","stringify","encodeURI","decodedUrl","decodeURI","hostUriStripped","indexOf","parseInitialURLAsync","initialUrl","_regeneratorRuntime","async","parseInitialURLAsync$","_context","prev","next","awrap","getInitialURL","sent","abrupt","stop","newLinking","constructor"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/expo/src/Linking/Linking.ts"],"sourcesContent":["import Constants from 'expo-constants';\nimport qs from 'qs';\n\nimport { ParsedURL } from './Linking.types';\nimport Linking from './LinkingModule';\n\nconst { manifest } = Constants;\n\nconst USES_CUSTOM_SCHEME = Constants.appOwnership === 'standalone' && manifest.scheme;\n\nlet HOST_URI = manifest.hostUri;\nif (!HOST_URI && !USES_CUSTOM_SCHEME) {\n  // we're probably not using up-to-date xdl, so just fake it for now\n  // we have to remove the /--/ on the end since this will be inserted again later\n  HOST_URI = _removeScheme(Constants.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n}\nconst IS_EXPO_HOSTED =\n  HOST_URI &&\n  (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(HOST_URI) ||\n    manifest.developer);\n\nfunction _removeScheme(url) {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\n\nfunction _removePort(url) {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\n\nfunction _removeLeadingSlash(url) {\n  return url.replace(/^\\//, '');\n}\n\nfunction _removeTrailingSlash(url) {\n  return url.replace(/\\/$/, '');\n}\n\nfunction _removeTrailingSlashAndQueryString(url) {\n  return url.replace(/\\/?\\?.*$/, '');\n}\n\nfunction makeUrl(path: string = '', queryParams: Object = {}): string {\n  let scheme = 'exp';\n  if (Constants.appOwnership === 'standalone') {\n    scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  }\n  if (!scheme) {\n    throw new Error('Cannot make a deep link into a standalone app with no custom scheme defined');\n  }\n\n  let hostUri = HOST_URI || '';\n  if (USES_CUSTOM_SCHEME && IS_EXPO_HOSTED) {\n    hostUri = '';\n  }\n\n  if (path) {\n    if (IS_EXPO_HOSTED && hostUri) {\n      path = `/--/${_removeLeadingSlash(path)}`;\n    }\n\n    if (!path.startsWith('/') && hostUri) {\n      path = `/${path}`;\n    } else if (path.startsWith('/') && !hostUri) {\n      path = path.substr(1);\n    }\n  } else {\n    path = '';\n  }\n\n  // merge user-provided query params with any that were already in the hostUri\n  // e.g. release-channel\n  let queryString = '';\n  let queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    let paramsFromHostUri = {};\n    try {\n      let parsedParams = qs.parse(queryString);\n      if (typeof parsedParams === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch (e) {}\n    queryParams = {\n      ...queryParams,\n      ...paramsFromHostUri,\n    };\n  }\n  queryString = qs.stringify(queryParams);\n  if (queryString) {\n    queryString = `?${queryString}`;\n  }\n\n  hostUri = _removeTrailingSlash(hostUri);\n\n  return encodeURI(`${scheme}://${hostUri}${path}${queryString}`);\n}\n\nfunction parse(url: string): ParsedURL {\n  if (!url) {\n    throw new Error('parse cannot be called with a null value');\n  }\n  // iOS client sometimes strips out the port from the initial URL\n  // even when it's included in the hostUri.\n  // This function should be able to handle both cases, so we strip off the port\n  // both here and from the hostUri.\n  let decodedUrl = _removePort(decodeURI(url));\n  let path: string;\n  let queryParams = {};\n\n  let queryStringMatchResult = decodedUrl.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    decodedUrl = queryStringMatchResult[1];\n    queryParams = qs.parse(queryStringMatchResult[2]);\n  }\n\n  // strip off the hostUri from the host and path\n  let hostUri = HOST_URI || '';\n  let hostUriStripped = _removePort(_removeTrailingSlashAndQueryString(hostUri));\n  if (hostUriStripped && decodedUrl.indexOf(hostUriStripped) > -1) {\n    path = decodedUrl.substr(decodedUrl.indexOf(hostUriStripped) + hostUriStripped.length);\n  } else {\n    path = _removeScheme(decodedUrl);\n  }\n\n  path = _removeLeadingSlash(path);\n\n  if (IS_EXPO_HOSTED && !USES_CUSTOM_SCHEME && path.startsWith('--/')) {\n    path = path.substr(3);\n  } else if (path.indexOf('+') > -1) {\n    path = path.substr(path.indexOf('+') + 1);\n  }\n\n  return { path, queryParams };\n}\n\nasync function parseInitialURLAsync(): Promise<ParsedURL> {\n  const initialUrl = await Linking.getInitialURL();\n  if (!initialUrl) {\n    return {\n      path: null,\n      queryParams: null,\n    };\n  }\n\n  return parse(initialUrl);\n}\n\n// @ts-ignore fix this...\nlet newLinking = new Linking.constructor();\n\nnewLinking.makeUrl = makeUrl;\nnewLinking.parse = parse;\nnewLinking.parseInitialURLAsync = parseInitialURLAsync;\n\nexport default newLinking;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}