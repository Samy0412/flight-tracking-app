{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-tabs/src/utils/createTabNavigator.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport { TabRouter, StackActions, SceneView, createNavigator, NavigationActions } from '@react-navigation/core';\nexport default function createTabNavigator(TabView) {\n  var NavigationView = function (_React$Component) {\n    _inherits(NavigationView, _React$Component);\n    function NavigationView() {\n      var _getPrototypeOf2;\n      var _this;\n      _classCallCheck(this, NavigationView);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavigationView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this._renderScene = function (_ref) {\n        var route = _ref.route;\n        var _this$props = _this.props,\n          screenProps = _this$props.screenProps,\n          descriptors = _this$props.descriptors;\n        var descriptor = descriptors[route.key];\n        var TabComponent = descriptor.getComponent();\n        return React.createElement(SceneView, {\n          screenProps: screenProps,\n          navigation: descriptor.navigation,\n          component: TabComponent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          }\n        });\n      };\n      _this._renderIcon = function (_ref2) {\n        var route = _ref2.route,\n          _ref2$focused = _ref2.focused,\n          focused = _ref2$focused === void 0 ? true : _ref2$focused,\n          tintColor = _ref2.tintColor,\n          _ref2$horizontal = _ref2.horizontal,\n          horizontal = _ref2$horizontal === void 0 ? false : _ref2$horizontal;\n        var descriptors = _this.props.descriptors;\n        var descriptor = descriptors[route.key];\n        var options = descriptor.options;\n        if (options.tabBarIcon) {\n          return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({\n            focused: focused,\n            tintColor: tintColor,\n            horizontal: horizontal\n          }) : options.tabBarIcon;\n        }\n        return null;\n      };\n      _this._getButtonComponent = function (_ref3) {\n        var route = _ref3.route;\n        var descriptors = _this.props.descriptors;\n        var descriptor = descriptors[route.key];\n        var options = descriptor.options;\n        if (options.tabBarButtonComponent) {\n          return options.tabBarButtonComponent;\n        }\n        return null;\n      };\n      _this._getLabelText = function (_ref4) {\n        var route = _ref4.route;\n        var descriptors = _this.props.descriptors;\n        var descriptor = descriptors[route.key];\n        var options = descriptor.options;\n        if (options.tabBarLabel) {\n          return options.tabBarLabel;\n        }\n        if (typeof options.title === 'string') {\n          return options.title;\n        }\n        return route.routeName;\n      };\n      _this._getAccessibilityLabel = function (_ref5) {\n        var route = _ref5.route;\n        var descriptors = _this.props.descriptors;\n        var descriptor = descriptors[route.key];\n        var options = descriptor.options;\n        if (typeof options.tabBarAccessibilityLabel !== 'undefined') {\n          return options.tabBarAccessibilityLabel;\n        }\n        var label = _this._getLabelText({\n          route: route\n        });\n        if (typeof label === 'string') {\n          var routes = _this.props.navigation.state.routes;\n          return label + \", tab, \" + (routes.indexOf(route) + 1) + \" of \" + routes.length;\n        }\n      };\n      _this._getTestID = function (_ref6) {\n        var route = _ref6.route;\n        var descriptors = _this.props.descriptors;\n        var descriptor = descriptors[route.key];\n        var options = descriptor.options;\n        return options.tabBarTestID;\n      };\n      _this._makeDefaultHandler = function (_ref7) {\n        var route = _ref7.route,\n          navigation = _ref7.navigation;\n        return function () {\n          if (navigation.isFocused()) {\n            if (route.hasOwnProperty('index') && route.index > 0) {\n              navigation.dispatch(StackActions.popToTop({\n                key: route.key\n              }));\n            } else {\n              navigation.emit('refocus');\n            }\n          } else {\n            _this._jumpTo(route.routeName);\n          }\n        };\n      };\n      _this._handleTabPress = function (_ref8) {\n        var route = _ref8.route;\n        _this._isTabPress = true;\n        var descriptors = _this.props.descriptors;\n        var descriptor = descriptors[route.key];\n        var navigation = descriptor.navigation,\n          options = descriptor.options;\n        var defaultHandler = _this._makeDefaultHandler({\n          route: route,\n          navigation: navigation\n        });\n        if (options.tabBarOnPress) {\n          options.tabBarOnPress({\n            navigation: navigation,\n            defaultHandler: defaultHandler\n          });\n        } else {\n          defaultHandler();\n        }\n      };\n      _this._handleTabLongPress = function (_ref9) {\n        var route = _ref9.route;\n        var descriptors = _this.props.descriptors;\n        var descriptor = descriptors[route.key];\n        var navigation = descriptor.navigation,\n          options = descriptor.options;\n        var defaultHandler = _this._makeDefaultHandler({\n          route: route,\n          navigation: navigation\n        });\n        if (options.tabBarOnLongPress) {\n          options.tabBarOnLongPress({\n            navigation: navigation,\n            defaultHandler: defaultHandler\n          });\n        } else {\n          defaultHandler();\n        }\n      };\n      _this._handleIndexChange = function (index) {\n        if (_this._isTabPress) {\n          _this._isTabPress = false;\n          return;\n        }\n        _this._jumpTo(_this.props.navigation.state.routes[index].routeName);\n      };\n      _this._handleSwipeStart = function () {\n        _this.setState({\n          isSwiping: true\n        });\n      };\n      _this._handleSwipeEnd = function () {\n        _this.setState({\n          isSwiping: false\n        });\n      };\n      _this._jumpTo = function (routeName) {\n        return _this.props.navigation.dispatch(NavigationActions.navigate({\n          routeName: routeName\n        }));\n      };\n      _this._isTabPress = false;\n      return _this;\n    }\n    _createClass(NavigationView, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props2 = this.props,\n          descriptors = _this$props2.descriptors,\n          navigation = _this$props2.navigation,\n          screenProps = _this$props2.screenProps;\n        var state = navigation.state;\n        var route = state.routes[state.index];\n        var descriptor = descriptors[route.key];\n        var options = _objectSpread({}, this.props.navigationConfig, {}, descriptor.options);\n        return React.createElement(TabView, _extends({}, options, {\n          getLabelText: this._getLabelText,\n          getButtonComponent: this._getButtonComponent,\n          getAccessibilityLabel: this._getAccessibilityLabel,\n          getTestID: this._getTestID,\n          renderIcon: this._renderIcon,\n          renderScene: this._renderScene,\n          onIndexChange: this._handleIndexChange,\n          onTabPress: this._handleTabPress,\n          onTabLongPress: this._handleTabLongPress,\n          navigation: navigation,\n          descriptors: descriptors,\n          screenProps: screenProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          }\n        }));\n      }\n    }]);\n    return NavigationView;\n  }(React.Component);\n  return function (routes) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var router = TabRouter(routes, config);\n    return createNavigator(NavigationView, router, config);\n  };\n}","map":{"version":3,"names":["React","TabRouter","StackActions","SceneView","createNavigator","NavigationActions","createTabNavigator","TabView","NavigationView","_React$Component","_inherits","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_renderScene","_ref","route","_this$props","props","screenProps","descriptors","descriptor","key","TabComponent","getComponent","createElement","navigation","component","__source","fileName","_jsxFileName","lineNumber","_renderIcon","_ref2","_ref2$focused","focused","tintColor","_ref2$horizontal","horizontal","options","tabBarIcon","_getButtonComponent","_ref3","tabBarButtonComponent","_getLabelText","_ref4","tabBarLabel","title","routeName","_getAccessibilityLabel","_ref5","tabBarAccessibilityLabel","label","routes","state","indexOf","_getTestID","_ref6","tabBarTestID","_makeDefaultHandler","_ref7","isFocused","hasOwnProperty","index","dispatch","popToTop","emit","_jumpTo","_handleTabPress","_ref8","_isTabPress","defaultHandler","tabBarOnPress","_handleTabLongPress","_ref9","tabBarOnLongPress","_handleIndexChange","_handleSwipeStart","setState","isSwiping","_handleSwipeEnd","navigate","_createClass","value","render","_this$props2","_objectSpread","navigationConfig","_extends","getLabelText","getButtonComponent","getAccessibilityLabel","getTestID","renderIcon","renderScene","onIndexChange","onTabPress","onTabLongPress","Component","config","undefined","router"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-tabs/src/utils/createTabNavigator.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  TabRouter,\n  StackActions,\n  SceneView,\n  createNavigator,\n  NavigationActions,\n} from '@react-navigation/core';\n\nexport type InjectedProps = {\n  getLabelText: (props: { route: any }) => any,\n  getAccessibilityLabel: (props: { route: any }) => string,\n  getTestID: (props: { route: any }) => string,\n  getButtonComponent: (props: { route: any }) => ?React.Component<*>,\n  renderIcon: (props: {\n    route: any,\n    focused: boolean,\n    tintColor: string,\n    horizontal: boolean,\n  }) => React.Node,\n  renderScene: (props: { route: any }) => ?React.Node,\n  onIndexChange: (index: number) => any,\n  onTabPress: (props: { route: any }) => mixed,\n  onTabLongPress: (props: { route: any }) => mixed,\n  navigation: any,\n  descriptors: any,\n  screenProps?: any,\n};\n\nexport default function createTabNavigator(TabView: React.ComponentType<*>) {\n  class NavigationView extends React.Component<*, *> {\n    _renderScene = ({ route }) => {\n      const { screenProps, descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const TabComponent = descriptor.getComponent();\n      return (\n        <SceneView\n          screenProps={screenProps}\n          navigation={descriptor.navigation}\n          component={TabComponent}\n        />\n      );\n    };\n\n    _renderIcon = ({\n      route,\n      focused = true,\n      tintColor,\n      horizontal = false,\n    }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      if (options.tabBarIcon) {\n        return typeof options.tabBarIcon === 'function'\n          ? options.tabBarIcon({ focused, tintColor, horizontal })\n          : options.tabBarIcon;\n      }\n\n      return null;\n    };\n\n    _getButtonComponent = ({ route }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      if (options.tabBarButtonComponent) {\n        return options.tabBarButtonComponent;\n      }\n\n      return null;\n    };\n\n    _getLabelText = ({ route }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      if (options.tabBarLabel) {\n        return options.tabBarLabel;\n      }\n\n      if (typeof options.title === 'string') {\n        return options.title;\n      }\n\n      return route.routeName;\n    };\n\n    _getAccessibilityLabel = ({ route }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      if (typeof options.tabBarAccessibilityLabel !== 'undefined') {\n        return options.tabBarAccessibilityLabel;\n      }\n\n      const label = this._getLabelText({ route });\n\n      if (typeof label === 'string') {\n        const { routes } = this.props.navigation.state;\n        return `${label}, tab, ${routes.indexOf(route) + 1} of ${\n          routes.length\n        }`;\n      }\n    };\n\n    _getTestID = ({ route }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      return options.tabBarTestID;\n    };\n\n    _makeDefaultHandler = ({ route, navigation }) => () => {\n      if (navigation.isFocused()) {\n        if (route.hasOwnProperty('index') && route.index > 0) {\n          // If current tab has a nested navigator, pop to top\n          navigation.dispatch(StackActions.popToTop({ key: route.key }));\n        } else {\n          navigation.emit('refocus');\n        }\n      } else {\n        this._jumpTo(route.routeName);\n      }\n    };\n\n    _handleTabPress = ({ route }) => {\n      this._isTabPress = true;\n\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const { navigation, options } = descriptor;\n\n      const defaultHandler = this._makeDefaultHandler({ route, navigation });\n\n      if (options.tabBarOnPress) {\n        options.tabBarOnPress({ navigation, defaultHandler });\n      } else {\n        defaultHandler();\n      }\n    };\n\n    _handleTabLongPress = ({ route }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const { navigation, options } = descriptor;\n\n      const defaultHandler = this._makeDefaultHandler({ route, navigation });\n\n      if (options.tabBarOnLongPress) {\n        options.tabBarOnLongPress({ navigation, defaultHandler });\n      } else {\n        defaultHandler();\n      }\n    };\n\n    _handleIndexChange = index => {\n      if (this._isTabPress) {\n        this._isTabPress = false;\n        return;\n      }\n\n      this._jumpTo(this.props.navigation.state.routes[index].routeName);\n    };\n\n    _handleSwipeStart = () => {\n      this.setState({ isSwiping: true });\n    };\n\n    _handleSwipeEnd = () => {\n      this.setState({ isSwiping: false });\n    };\n\n    _jumpTo = routeName =>\n      this.props.navigation.dispatch(NavigationActions.navigate({ routeName }));\n\n    _isTabPress: boolean = false;\n\n    render() {\n      const { descriptors, navigation, screenProps } = this.props;\n      const { state } = navigation;\n      const route = state.routes[state.index];\n      const descriptor = descriptors[route.key];\n      const options = {\n        ...this.props.navigationConfig,\n        ...descriptor.options,\n      };\n\n      return (\n        <TabView\n          {...options}\n          getLabelText={this._getLabelText}\n          getButtonComponent={this._getButtonComponent}\n          getAccessibilityLabel={this._getAccessibilityLabel}\n          getTestID={this._getTestID}\n          renderIcon={this._renderIcon}\n          renderScene={this._renderScene}\n          onIndexChange={this._handleIndexChange}\n          onTabPress={this._handleTabPress}\n          onTabLongPress={this._handleTabLongPress}\n          navigation={navigation}\n          descriptors={descriptors}\n          screenProps={screenProps}\n        />\n      );\n    }\n  }\n\n  return (routes: *, config: * = {}) => {\n    const router = TabRouter(routes, config);\n    return createNavigator(NavigationView, router, config);\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}