{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport UUID from 'uuid-js';\nimport { guardPermission, getExponentPushTokenAsync, getDevicePushTokenAsync } from \"./ExponentNotificationsHelper.web\";\nimport \"./ExponentNotifications.fx.web\";\nfunction transformLocalNotification(notification, tag) {\n  var _notification$web = notification.web,\n    web = _notification$web === void 0 ? {} : _notification$web,\n    abstractNotification = _objectWithoutProperties(notification, [\"web\"]);\n  tag = web.tag || tag;\n  var nativeNotification = _objectSpread({}, abstractNotification, {\n    tag: tag\n  }, web, {\n    _isLocal: true\n  });\n  return [nativeNotification.title, nativeNotification];\n}\nfunction generateID() {\n  return UUID.create().toString();\n}\nfunction getRegistrationAsync() {\n  var registration;\n  return _regeneratorRuntime.async(function getRegistrationAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          guardPermission();\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(navigator.serviceWorker.getRegistration());\n        case 3:\n          registration = _context.sent;\n          if (registration) {\n            _context.next = 6;\n            break;\n          }\n          throw new Error('Failed to get notification registration!');\n        case 6:\n          return _context.abrupt(\"return\", registration);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\nfunction getNotificationsAsync(tag) {\n  var registration, notifications;\n  return _regeneratorRuntime.async(function getNotificationsAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getRegistrationAsync());\n        case 2:\n          registration = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(registration.getNotifications(tag ? {\n            tag: tag\n          } : undefined));\n        case 5:\n          notifications = _context2.sent;\n          return _context2.abrupt(\"return\", notifications);\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\nexport default {\n  presentLocalNotification: function presentLocalNotification(notification) {\n    var registration, tag;\n    return _regeneratorRuntime.async(function presentLocalNotification$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getRegistrationAsync());\n          case 2:\n            registration = _context3.sent;\n            tag = generateID();\n            registration.showNotification.apply(registration, _toConsumableArray(transformLocalNotification(notification, tag)));\n            return _context3.abrupt(\"return\", tag);\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  },\n  scheduleLocalNotification: function scheduleLocalNotification(notification) {\n    var options,\n      registration,\n      tag,\n      intervalMs,\n      _args4 = arguments;\n    return _regeneratorRuntime.async(function scheduleLocalNotification$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n            if (!options.intervalMs) {\n              _context4.next = 10;\n              break;\n            }\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(getRegistrationAsync());\n          case 4:\n            registration = _context4.sent;\n            tag = generateID();\n            setTimeout(function () {\n              registration.showNotification.apply(registration, _toConsumableArray(transformLocalNotification(notification, tag)));\n            }, options.intervalMs);\n            return _context4.abrupt(\"return\", tag);\n          case 10:\n            if (!options.time) {\n              _context4.next = 15;\n              break;\n            }\n            intervalMs = options.time - Date.now();\n            if (!(intervalMs < 0)) {\n              _context4.next = 14;\n              break;\n            }\n            throw new Error('Expo.Notifications.scheduleLocalNotification(): options.time must be some time in the future.');\n          case 14:\n            return _context4.abrupt(\"return\", this.scheduleLocalNotification(notification, {\n              intervalMs: intervalMs\n            }));\n          case 15:\n            throw new Error(\"Expo.Notifications.scheduleLocalNotification() options \" + JSON.stringify(options, null, 2) + \" are not supported yet.\");\n          case 16:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this);\n  },\n  dismissNotification: async function dismissNotification(notificationId) {\n    var notifications = await getNotificationsAsync(notificationId);\n    for (var _iterator = notifications, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n      var _notification = _ref;\n      _notification.close();\n    }\n  },\n  async dismissAllNotifications() {\n    this.dismissNotification();\n  },\n  async cancelScheduledNotificationAsync(notificationId) {\n    this.dismissNotification(notificationId);\n  },\n  async cancelAllScheduledNotificationsAsync() {\n    this.dismissNotification();\n  },\n  async getExponentPushTokenAsync() {\n    return await getExponentPushTokenAsync();\n  },\n  async getDevicePushTokenAsync() {\n    return await getDevicePushTokenAsync();\n  }\n};","map":{"version":3,"names":["UUID","guardPermission","getExponentPushTokenAsync","getDevicePushTokenAsync","transformLocalNotification","notification","tag","_notification$web","web","abstractNotification","_objectWithoutProperties","nativeNotification","_objectSpread","_isLocal","title","generateID","create","toString","getRegistrationAsync","registration","_regeneratorRuntime","async","getRegistrationAsync$","_context","prev","next","awrap","navigator","serviceWorker","getRegistration","sent","Error","abrupt","stop","getNotificationsAsync","notifications","getNotificationsAsync$","_context2","getNotifications","undefined","presentLocalNotification","presentLocalNotification$","_context3","showNotification","apply","_toConsumableArray","scheduleLocalNotification","options","intervalMs","_args4","arguments","scheduleLocalNotification$","_context4","length","setTimeout","time","Date","now","JSON","stringify","dismissNotification","notificationId","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","done","value","close","dismissAllNotifications","cancelScheduledNotificationAsync","cancelAllScheduledNotificationsAsync"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/expo/src/Notifications/ExponentNotifications.web.ts"],"sourcesContent":["import UUID from 'uuid-js';\n\nimport { LocalNotification, LocalNotificationId } from './Notifications.types';\nimport {\n  guardPermission,\n  getExponentPushTokenAsync,\n  getDevicePushTokenAsync,\n} from './ExponentNotificationsHelper.web';\n\n// Register `message`'s event listener (side-effect)\nimport './ExponentNotifications.fx.web';\n\nfunction transformLocalNotification(\n  notification: LocalNotification,\n  tag: string\n): [string, NotificationOptions] {\n  const { web = {}, ...abstractNotification } = notification;\n  tag = web.tag || tag;\n  const nativeNotification = {\n    ...abstractNotification,\n    tag,\n    ...web,\n    // Show that this notification is a local notification\n    _isLocal: true,\n  };\n  return [nativeNotification.title, nativeNotification];\n}\n\nfunction generateID(): string {\n  return UUID.create().toString();\n}\n\nasync function getRegistrationAsync(): Promise<ServiceWorkerRegistration> {\n  guardPermission();\n  const registration = await navigator.serviceWorker.getRegistration();\n  if (!registration) {\n    throw new Error('Failed to get notification registration!');\n  }\n  return registration;\n}\n\nasync function getNotificationsAsync(tag?: string): Promise<Notification[]> {\n  const registration = await getRegistrationAsync();\n  const notifications = await registration.getNotifications(tag ? { tag } : undefined);\n  return notifications;\n}\n\nexport default {\n  async presentLocalNotification(notification: LocalNotification): Promise<LocalNotificationId> {\n    const registration = await getRegistrationAsync();\n    const tag = generateID();\n    registration.showNotification(...transformLocalNotification(notification, tag));\n    return tag;\n  },\n  async scheduleLocalNotification(\n    notification: any,\n    options: {\n      time?: Date | number;\n      repeat?: 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n      intervalMs?: number;\n    } = {}\n  ): Promise<string> {\n    if (options.intervalMs) {\n      const registration = await getRegistrationAsync();\n      const tag = generateID();\n      setTimeout(() => {\n        registration.showNotification(...transformLocalNotification(notification, tag));\n      }, options.intervalMs);\n      return tag;\n    } else if (options.time) {\n      const intervalMs = (options.time as number) - Date.now();\n      if (intervalMs < 0) {\n        throw new Error(\n          'Expo.Notifications.scheduleLocalNotification(): options.time must be some time in the future.'\n        );\n      }\n      return this.scheduleLocalNotification(notification, {\n        intervalMs,\n      });\n    }\n    throw new Error(\n      `Expo.Notifications.scheduleLocalNotification() options ${JSON.stringify(\n        options,\n        null,\n        2\n      )} are not supported yet.`\n    );\n  },\n\n  async dismissNotification(notificationId?: string): Promise<void> {\n    const notifications = await getNotificationsAsync(notificationId);\n    for (const notification of notifications) {\n      notification.close();\n    }\n  },\n  async dismissAllNotifications(): Promise<void> {\n    this.dismissNotification();\n  },\n  async cancelScheduledNotificationAsync(notificationId: string): Promise<void> {\n    this.dismissNotification(notificationId);\n  },\n  async cancelAllScheduledNotificationsAsync(): Promise<void> {\n    this.dismissNotification();\n  },\n\n  async getExponentPushTokenAsync(): Promise<string> {\n    return await getExponentPushTokenAsync();\n  },\n\n  async getDevicePushTokenAsync(): Promise<{ type: string; data: Object }> {\n    return await getDevicePushTokenAsync();\n  },\n};\n"],"mappings":";;;;;;AAAA,OAAOA,IAAI,MAAM,SAAS;AAG1B,SACEC,eAAe,EACfC,yBAAyB,EACzBC,uBAAuB;AAIzB;AAEA,SAASC,0BAA0BA,CACjCC,YAA+B,EAC/BC,GAAW;EAAA,IAAAC,iBAAA,GAEmCF,YAAY,CAAlDG,GAAG;IAAHA,GAAG,GAAAD,iBAAA,cAAG,EAAE,GAAAA,iBAAA;IAAKE,oBAAoB,GAAAC,wBAAA,CAAKL,YAAY;EAC1DC,GAAG,GAAGE,GAAG,CAACF,GAAG,IAAIA,GAAG;EACpB,IAAMK,kBAAkB,GAAAC,aAAA,KACnBH,oBAAoB;IACvBH,GAAG,EAAHA;EAAG,GACAE,GAAG;IAENK,QAAQ,EAAE;EAAI,EACf;EACD,OAAO,CAACF,kBAAkB,CAACG,KAAK,EAAEH,kBAAkB,CAAC;AACvD;AAEA,SAASI,UAAUA,CAAA;EACjB,OAAOf,IAAI,CAACgB,MAAM,EAAE,CAACC,QAAQ,EAAE;AACjC;AAEA,SAAeC,oBAAoBA,CAAA;EAAA,IAAAC,YAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,sBAAAC,QAAA;IAAA;MAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACjCxB,eAAe,EAAE;UAACsB,QAAA,CAAAE,IAAA;UAAA,OAAAL,mBAAA,CAAAM,KAAA,CACSC,SAAS,CAACC,aAAa,CAACC,eAAe,EAAE;QAAA;UAA9DV,YAAY,GAAAI,QAAA,CAAAO,IAAA;UAAA,IACbX,YAAY;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACT,IAAIM,KAAK,CAAC,0CAA0C,CAAC;QAAA;UAAA,OAAAR,QAAA,CAAAS,MAAA,WAEtDb,YAAY;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAU,IAAA;MAAA;IAAA;EAAA;AAAA;AAGrB,SAAeC,qBAAqBA,CAAC5B,GAAY;EAAA,IAAAa,YAAA,EAAAgB,aAAA;EAAA,OAAAf,mBAAA,CAAAC,KAAA,UAAAe,uBAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;QAAA;UAAAY,SAAA,CAAAZ,IAAA;UAAA,OAAAL,mBAAA,CAAAM,KAAA,CACpBR,oBAAoB,EAAE;QAAA;UAA3CC,YAAY,GAAAkB,SAAA,CAAAP,IAAA;UAAAO,SAAA,CAAAZ,IAAA;UAAA,OAAAL,mBAAA,CAAAM,KAAA,CACUP,YAAY,CAACmB,gBAAgB,CAAChC,GAAG,GAAG;YAAEA,GAAG,EAAHA;UAAG,CAAE,GAAGiC,SAAS,CAAC;QAAA;UAA9EJ,aAAa,GAAAE,SAAA,CAAAP,IAAA;UAAA,OAAAO,SAAA,CAAAL,MAAA,WACZG,aAAa;QAAA;QAAA;UAAA,OAAAE,SAAA,CAAAJ,IAAA;MAAA;IAAA;EAAA;AAAA;AAGtB,eAAe;EACPO,wBAAwB,WAAAA,yBAACnC,YAA+B;IAAA,IAAAc,YAAA,EAAAb,GAAA;IAAA,OAAAc,mBAAA,CAAAC,KAAA,UAAAoB,0BAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAjB,IAAA;UAAA;YAAAiB,SAAA,CAAAjB,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CACjCR,oBAAoB,EAAE;UAAA;YAA3CC,YAAY,GAAAuB,SAAA,CAAAZ,IAAA;YACZxB,GAAG,GAAGS,UAAU,EAAE;YACxBI,YAAY,CAACwB,gBAAgB,CAAAC,KAAA,CAA7BzB,YAAY,EAAA0B,kBAAA,CAAqBzC,0BAA0B,CAACC,YAAY,EAAEC,GAAG,CAAC,EAAC;YAAC,OAAAoC,SAAA,CAAAV,MAAA,WACzE1B,GAAG;UAAA;UAAA;YAAA,OAAAoC,SAAA,CAAAT,IAAA;QAAA;MAAA;IAAA;EAAA;EAENa,yBAAyB,WAAAA,0BAC7BzC,YAAiB;IAAA,IAAA0C,OAAA;MAAA5B,YAAA;MAAAb,GAAA;MAAA0C,UAAA;MAAAC,MAAA,GAAAC,SAAA;IAAA,OAAA9B,mBAAA,CAAAC,KAAA,UAAA8B,2BAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAA5B,IAAA,GAAA4B,SAAA,CAAA3B,IAAA;UAAA;YACjBsB,OAAA,GAAAE,MAAA,CAAAI,MAAA,QAAAJ,MAAA,QAAAV,SAAA,GAAAU,MAAA,MAII,EAAE;YAAA,KAEFF,OAAO,CAACC,UAAU;cAAAI,SAAA,CAAA3B,IAAA;cAAA;YAAA;YAAA2B,SAAA,CAAA3B,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CACOR,oBAAoB,EAAE;UAAA;YAA3CC,YAAY,GAAAiC,SAAA,CAAAtB,IAAA;YACZxB,GAAG,GAAGS,UAAU,EAAE;YACxBuC,UAAU,CAAC,YAAK;cACdnC,YAAY,CAACwB,gBAAgB,CAAAC,KAAA,CAA7BzB,YAAY,EAAA0B,kBAAA,CAAqBzC,0BAA0B,CAACC,YAAY,EAAEC,GAAG,CAAC,EAAC;YACjF,CAAC,EAAEyC,OAAO,CAACC,UAAU,CAAC;YAAC,OAAAI,SAAA,CAAApB,MAAA,WAChB1B,GAAG;UAAA;YAAA,KACDyC,OAAO,CAACQ,IAAI;cAAAH,SAAA,CAAA3B,IAAA;cAAA;YAAA;YACfuB,UAAU,GAAID,OAAO,CAACQ,IAAe,GAAGC,IAAI,CAACC,GAAG,EAAE;YAAA,MACpDT,UAAU,GAAG,CAAC;cAAAI,SAAA,CAAA3B,IAAA;cAAA;YAAA;YAAA,MACV,IAAIM,KAAK,CACb,+FAA+F,CAChG;UAAA;YAAA,OAAAqB,SAAA,CAAApB,MAAA,WAEI,IAAI,CAACc,yBAAyB,CAACzC,YAAY,EAAE;cAClD2C,UAAU,EAAVA;aACD,CAAC;UAAA;YAAA,MAEE,IAAIjB,KAAK,6DAC6C2B,IAAI,CAACC,SAAS,CACtEZ,OAAO,EACP,IAAI,EACJ,CAAC,CACF,6BACF;UAAA;UAAA;YAAA,OAAAK,SAAA,CAAAnB,IAAA;QAAA;MAAA;IAAA;EAAA;EAGG2B,mBAAmB,iBAAAA,oBAACC,cAAuB;IAC/C,IAAM1B,aAAa,GAAG,MAAMD,qBAAqB,CAAC2B,cAAc,CAAC;IACjE,SAAAC,SAAA,GAA2B3B,aAAa,EAAA4B,QAAA,GAAAC,KAAA,CAAAC,OAAA,CAAAH,SAAA,GAAAI,EAAA,MAAAJ,SAAA,GAAAC,QAAA,GAAAD,SAAA,GAAAA,SAAA,QAAAK,MAAA,kBAAAA,MAAA,CAAAC,QAAA,sBAAE;MAAA,IAAAC,IAAA;MAAA,IAAAN,QAAA;QAAA,IAAAG,EAAA,IAAAJ,SAAA,CAAAT,MAAA;QAAAgB,IAAA,GAAAP,SAAA,CAAAI,EAAA;MAAA;QAAAA,EAAA,GAAAJ,SAAA,CAAArC,IAAA;QAAA,IAAAyC,EAAA,CAAAI,IAAA;QAAAD,IAAA,GAAAH,EAAA,CAAAK,KAAA;MAAA;MAAA,IAA/BlE,aAAY,GAAAgE,IAAA;MACrBhE,aAAY,CAACmE,KAAK,EAAE;;EAExB,CAAC;EACD,MAAMC,uBAAuBA,CAAA;IAC3B,IAAI,CAACb,mBAAmB,EAAE;EAC5B,CAAC;EACD,MAAMc,gCAAgCA,CAACb,cAAsB;IAC3D,IAAI,CAACD,mBAAmB,CAACC,cAAc,CAAC;EAC1C,CAAC;EACD,MAAMc,oCAAoCA,CAAA;IACxC,IAAI,CAACf,mBAAmB,EAAE;EAC5B,CAAC;EAED,MAAM1D,yBAAyBA,CAAA;IAC7B,OAAO,MAAMA,yBAAyB,EAAE;EAC1C,CAAC;EAED,MAAMC,uBAAuBA,CAAA;IAC3B,OAAO,MAAMA,uBAAuB,EAAE;EACxC;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}