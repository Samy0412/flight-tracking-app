{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/@react-navigation/native/dist/Scrollables.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { ScrollView as GHScrollView } from 'react-native-gesture-handler';\nimport createNavigationAwareScrollable from \"./createNavigationAwareScrollable\";\nimport invariant from \"./utils/invariant\";\nvar WrappedScrollView;\nif (Platform.OS === 'android') {\n  WrappedScrollView = createNavigationAwareScrollable(ScrollView);\n} else {\n  WrappedScrollView = createNavigationAwareScrollable(GHScrollView);\n}\nfunction propsMaybeWithRefreshControl(props) {\n  var onRefresh = props.onRefresh;\n  if (onRefresh) {\n    invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n    return _objectSpread({}, props, {\n      refreshControl: props.refreshControl == null ? React.createElement(RefreshControl, {\n        refreshing: props.refreshing,\n        onRefresh: onRefresh,\n        progressViewOffset: props.progressViewOffset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }) : props.refreshControl\n    });\n  } else {\n    return props;\n  }\n}\nvar WrappedFlatList = React.forwardRef(function (props, ref) {\n  return React.createElement(FlatList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(props) {\n      return React.createElement(WrappedScrollView, _extends({}, propsMaybeWithRefreshControl(props), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }));\n});\nvar WrappedSectionList = React.forwardRef(function (props, ref) {\n  return React.createElement(SectionList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(props) {\n      return React.createElement(WrappedScrollView, _extends({}, propsMaybeWithRefreshControl(props), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    }\n  }));\n});\nmodule.exports = {\n  ScrollView: WrappedScrollView,\n  FlatList: WrappedFlatList,\n  SectionList: WrappedSectionList\n};","map":{"version":3,"names":["React","ScrollView","Platform","FlatList","SectionList","RefreshControl","GHScrollView","createNavigationAwareScrollable","invariant","WrappedScrollView","OS","propsMaybeWithRefreshControl","props","onRefresh","refreshing","JSON","stringify","_objectSpread","refreshControl","createElement","progressViewOffset","__source","fileName","_jsxFileName","lineNumber","WrappedFlatList","forwardRef","ref","_extends","renderScrollComponent","WrappedSectionList","module","exports"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/@react-navigation/native/dist/Scrollables.js"],"sourcesContent":["import React from 'react';\nimport { ScrollView, Platform, FlatList, SectionList, RefreshControl } from 'react-native';\nimport { ScrollView as GHScrollView } from 'react-native-gesture-handler';\nimport createNavigationAwareScrollable from './createNavigationAwareScrollable';\nimport invariant from './utils/invariant';\n\nlet WrappedScrollView;\nif (Platform.OS === 'android') {\n  // @todo: use GHScrollView again when\n  // https://github.com/kmagiera/react-native-gesture-handler/issues/560 has\n  // been fixed.\n  WrappedScrollView = createNavigationAwareScrollable(ScrollView);\n} else {\n  WrappedScrollView = createNavigationAwareScrollable(GHScrollView);\n}\n\nfunction propsMaybeWithRefreshControl(props) {\n  const onRefresh = props.onRefresh;\n  if (onRefresh) {\n    invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n    return {\n      ...props,\n      refreshControl: props.refreshControl == null ? <RefreshControl refreshing={props.refreshing} onRefresh={onRefresh} progressViewOffset={props.progressViewOffset} /> : props.refreshControl\n    };\n  } else {\n    return props;\n  }\n}\n\nconst WrappedFlatList = React.forwardRef((props, ref) => <FlatList ref={ref} {...props} renderScrollComponent={props => <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />} />);\n\nconst WrappedSectionList = React.forwardRef((props, ref) => <SectionList ref={ref} {...props} renderScrollComponent={props => <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />} />);\n\n// eslint-disable-next-line import/no-commonjs\nmodule.exports = {\n  ScrollView: WrappedScrollView,\n  FlatList: WrappedFlatList,\n  SectionList: WrappedSectionList\n};"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,WAAA;AAAA,OAAAC,cAAA;AAE1B,SAASJ,UAAU,IAAIK,YAAY,QAAQ,8BAA8B;AACzE,OAAOC,+BAA+B;AACtC,OAAOC,SAAS;AAEhB,IAAIC,iBAAiB;AACrB,IAAIP,QAAQ,CAACQ,EAAE,KAAK,SAAS,EAAE;EAI7BD,iBAAiB,GAAGF,+BAA+B,CAACN,UAAU,CAAC;AACjE,CAAC,MAAM;EACLQ,iBAAiB,GAAGF,+BAA+B,CAACD,YAAY,CAAC;AACnE;AAEA,SAASK,4BAA4BA,CAACC,KAAK,EAAE;EAC3C,IAAMC,SAAS,GAAGD,KAAK,CAACC,SAAS;EACjC,IAAIA,SAAS,EAAE;IACbL,SAAS,CAAC,OAAOI,KAAK,CAACE,UAAU,KAAK,SAAS,EAAE,mFAAmF,GAAGC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAACE,UAAU,CAAC,GAAG,GAAG,CAAC;IAC9K,OAAAG,aAAA,KACKL,KAAK;MACRM,cAAc,EAAEN,KAAK,CAACM,cAAc,IAAI,IAAI,GAAGlB,KAAA,CAAAmB,aAAA,CAACd,cAAc;QAACS,UAAU,EAAEF,KAAK,CAACE,UAAW;QAACD,SAAS,EAAEA,SAAU;QAACO,kBAAkB,EAAER,KAAK,CAACQ,kBAAmB;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,EAAG,GAAGZ,KAAK,CAACM;IAAc;EAE9L,CAAC,MAAM;IACL,OAAON,KAAK;EACd;AACF;AAEA,IAAMa,eAAe,GAAGzB,KAAK,CAAC0B,UAAU,CAAC,UAACd,KAAK,EAAEe,GAAG;EAAA,OAAK3B,KAAA,CAAAmB,aAAA,CAAChB,QAAQ,EAAAyB,QAAA;IAACD,GAAG,EAAEA;EAAI,GAAKf,KAAK;IAAEiB,qBAAqB,EAAE,SAAAA,sBAAAjB,KAAK;MAAA,OAAIZ,KAAA,CAAAmB,aAAA,CAACV,iBAAiB,EAAAmB,QAAA,KAAKjB,4BAA4B,CAACC,KAAK,CAAC;QAAAS,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAAI;IAAA,CAAC;IAAAH,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;EAAA,GAAG;AAAA,EAAC;AAE3L,IAAMM,kBAAkB,GAAG9B,KAAK,CAAC0B,UAAU,CAAC,UAACd,KAAK,EAAEe,GAAG;EAAA,OAAK3B,KAAA,CAAAmB,aAAA,CAACf,WAAW,EAAAwB,QAAA;IAACD,GAAG,EAAEA;EAAI,GAAKf,KAAK;IAAEiB,qBAAqB,EAAE,SAAAA,sBAAAjB,KAAK;MAAA,OAAIZ,KAAA,CAAAmB,aAAA,CAACV,iBAAiB,EAAAmB,QAAA,KAAKjB,4BAA4B,CAACC,KAAK,CAAC;QAAAS,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAAI;IAAA,CAAC;IAAAH,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;EAAA,GAAG;AAAA,EAAC;AAGjMO,MAAM,CAACC,OAAO,GAAG;EACf/B,UAAU,EAAEQ,iBAAiB;EAC7BN,QAAQ,EAAEsB,eAAe;EACzBrB,WAAW,EAAE0B;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}