{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { ThemeColors, createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from \"../routers/DrawerRouter\";\nimport DrawerView from \"../views/DrawerView\";\nimport DrawerItems from \"../views/DrawerNavigatorItems\";\nvar defaultContentComponent = function defaultContentComponent(props) {\n  return React.createElement(ScrollView, {\n    alwaysBounceVertical: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    }\n  }, React.createElement(SafeAreaView, {\n    forceInset: {\n      top: 'always',\n      horizontal: 'never'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    }\n  }, React.createElement(DrawerItems, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    }\n  }))));\n};\nvar DefaultDrawerConfig = {\n  drawerWidth: function drawerWidth() {\n    var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n    var smallerAxisSize = Math.min(height, width);\n    var isLandscape = width > height;\n    var isTablet = smallerAxisSize >= 600;\n    var appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    var maxWidth = isTablet ? 320 : 280;\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: {\n    light: ThemeColors.light.bodyContent,\n    dark: ThemeColors.dark.bodyContent\n  },\n  useNativeAnimations: true,\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n  overlayColor: {\n    light: 'black',\n    dark: 'black'\n  }\n};\nvar DrawerNavigator = function DrawerNavigator(routeConfigs) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var mergedConfig = _objectSpread({}, DefaultDrawerConfig, {}, config);\n  var drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  var navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\nexport default DrawerNavigator;","map":{"version":3,"names":["React","Dimensions","Platform","ScrollView","ThemeColors","createNavigator","SafeAreaView","DrawerRouter","DrawerView","DrawerItems","defaultContentComponent","props","createElement","alwaysBounceVertical","__source","fileName","_jsxFileName","lineNumber","forceInset","top","horizontal","_extends","DefaultDrawerConfig","drawerWidth","_Dimensions$get","get","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","OS","maxWidth","contentComponent","drawerPosition","keyboardDismissMode","drawerBackgroundColor","light","bodyContent","dark","useNativeAnimations","drawerType","hideStatusBar","statusBarAnimation","overlayColor","DrawerNavigator","routeConfigs","config","arguments","length","undefined","mergedConfig","_objectSpread","drawerRouter","navigator"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js"],"sourcesContent":["import React from 'react';\nimport { Dimensions, Platform, ScrollView } from 'react-native';\nimport { ThemeColors, createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from '../routers/DrawerRouter';\nimport DrawerView from '../views/DrawerView';\nimport DrawerItems from '../views/DrawerNavigatorItems';\n\n// A stack navigators props are the intersection between\n// the base navigator props (navgiation, screenProps, etc)\n// and the view's props\n\nconst defaultContentComponent = props => <ScrollView alwaysBounceVertical={false}>\n    <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n      <DrawerItems {...props} />\n    </SafeAreaView>\n  </ScrollView>;\n\nconst DefaultDrawerConfig = {\n  drawerWidth: () => {\n    /*\n     * Default drawer width is screen width - header height\n     * with a max width of 280 on mobile and 320 on tablet\n     * https://material.io/guidelines/patterns/navigation-drawer.html\n     */\n    const { height, width } = Dimensions.get('window');\n    const smallerAxisSize = Math.min(height, width);\n    const isLandscape = width > height;\n    const isTablet = smallerAxisSize >= 600;\n    const appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    const maxWidth = isTablet ? 320 : 280;\n\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: {\n    light: ThemeColors.light.bodyContent,\n    dark: ThemeColors.dark.bodyContent\n  },\n  useNativeAnimations: true,\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n  overlayColor: {\n    light: 'black',\n    dark: 'black'\n  }\n};\n\nconst DrawerNavigator = (routeConfigs, config = {}) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  const navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,WAAW,EAAEC,eAAe,QAAQ,wBAAwB;AACrE,SAASC,YAAY,QAAQ,0BAA0B;AACvD,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAMlB,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAGC,KAAK;EAAA,OAAIX,KAAA,CAAAY,aAAA,CAACT,UAAU;IAACU,oBAAoB,EAAE,KAAM;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;EAAA,GAC7EjB,KAAA,CAAAY,aAAA,CAACN,YAAY;IAACY,UAAU,EAAE;MAAEC,GAAG,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAN,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;EAAA,GAC/DjB,KAAA,CAAAY,aAAA,CAACH,WAAW,EAAAY,QAAA,KAAKV,KAAK;IAAAG,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;EAAA,GAAI,CACb,CACJ;AAAA;AAEf,IAAMK,mBAAmB,GAAG;EAC1BC,WAAW,EAAE,SAAAA,YAAA,EAAM;IAAA,IAAAC,eAAA,GAMSvB,UAAU,CAACwB,GAAG,CAAC,QAAQ,CAAC;MAA1CC,MAAM,GAAAF,eAAA,CAANE,MAAM;MAAEC,KAAK,GAAAH,eAAA,CAALG,KAAK;IACrB,IAAMC,eAAe,GAAGC,IAAI,CAACC,GAAG,CAACJ,MAAM,EAAEC,KAAK,CAAC;IAC/C,IAAMI,WAAW,GAAGJ,KAAK,GAAGD,MAAM;IAClC,IAAMM,QAAQ,GAAGJ,eAAe,IAAI,GAAG;IACvC,IAAMK,YAAY,GAAG/B,QAAQ,CAACgC,EAAE,KAAK,KAAK,GAAGH,WAAW,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACvE,IAAMI,QAAQ,GAAGH,QAAQ,GAAG,GAAG,GAAG,GAAG;IAErC,OAAOH,IAAI,CAACC,GAAG,CAACF,eAAe,GAAGK,YAAY,EAAEE,QAAQ,CAAC;EAC3D,CAAC;EACDC,gBAAgB,EAAE1B,uBAAuB;EACzC2B,cAAc,EAAE,MAAM;EACtBC,mBAAmB,EAAE,SAAS;EAC9BC,qBAAqB,EAAE;IACrBC,KAAK,EAAEpC,WAAW,CAACoC,KAAK,CAACC,WAAW;IACpCC,IAAI,EAAEtC,WAAW,CAACsC,IAAI,CAACD;EACzB,CAAC;EACDE,mBAAmB,EAAE,IAAI;EACzBC,UAAU,EAAE,OAAO;EACnBC,aAAa,EAAE,KAAK;EACpBC,kBAAkB,EAAE,OAAO;EAC3BC,YAAY,EAAE;IACZP,KAAK,EAAE,OAAO;IACdE,IAAI,EAAE;EACR;AACF,CAAC;AAED,IAAMM,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,YAAY,EAAkB;EAAA,IAAhBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChD,IAAMG,YAAY,GAAAC,aAAA,KAAQjC,mBAAmB,MAAK4B,MAAM,CAAE;EAC1D,IAAMM,YAAY,GAAGjD,YAAY,CAAC0C,YAAY,EAAEK,YAAY,CAAC;EAC7D,IAAMG,SAAS,GAAGpD,eAAe,CAACG,UAAU,EAAEgD,YAAY,EAAEF,YAAY,CAAC;EACzE,OAAOG,SAAS;AAClB,CAAC;AAED,eAAeT,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}