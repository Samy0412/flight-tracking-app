{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-drawer/dist/views/TouchableItem.js\";\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nvar ANDROID_VERSION_LOLLIPOP = 21;\nvar TouchableItem = function (_React$Component) {\n  _inherits(TouchableItem, _React$Component);\n  function TouchableItem() {\n    _classCallCheck(this, TouchableItem);\n    return _possibleConstructorReturn(this, _getPrototypeOf(TouchableItem).apply(this, arguments));\n  }\n  _createClass(TouchableItem, [{\n    key: \"render\",\n    value: function render() {\n      if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n        var _this$props = this.props,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"style\"]);\n        return React.createElement(TouchableNativeFeedback, _extends({}, rest, {\n          style: null,\n          background: TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          }\n        }), React.createElement(View, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          }\n        }, React.Children.only(this.props.children)));\n      }\n      return React.createElement(TouchableOpacity, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }), this.props.children);\n    }\n  }]);\n  return TouchableItem;\n}(React.Component);\nTouchableItem.defaultProps = {\n  borderless: false,\n  pressColor: 'rgba(0, 0, 0, .32)'\n};\nexport { TouchableItem as default };","map":{"version":3,"names":["React","Platform","TouchableNativeFeedback","TouchableOpacity","View","ANDROID_VERSION_LOLLIPOP","TouchableItem","_React$Component","_inherits","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_createClass","key","value","render","OS","Version","_this$props","props","style","rest","_objectWithoutProperties","createElement","_extends","background","Ripple","pressColor","borderless","__source","fileName","_jsxFileName","lineNumber","Children","only","children","Component","defaultProps","default"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-drawer/dist/views/TouchableItem.js"],"sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport React from 'react';\nimport { Platform, TouchableNativeFeedback, TouchableOpacity, View } from 'react-native';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\nexport default class TouchableItem extends React.Component {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)'\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n      const { style, ...rest } = this.props;\n      return <TouchableNativeFeedback {...rest} style={null} background={TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless)}>\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>;\n    }\n\n    return <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>;\n  }\n}"],"mappings":";;;;;;;;AASA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,uBAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAG1B,IAAMC,wBAAwB,GAAG,EAAE;AAAC,IAEfC,aAAa,aAAAC,gBAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,gBAAA;EAAA,SAAAD,cAAA;IAAAG,eAAA,OAAAH,aAAA;IAAA,OAAAI,0BAAA,OAAAC,eAAA,CAAAL,aAAA,EAAAM,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,aAAA;IAAAS,GAAA;IAAAC,KAAA,WAAAC,OAAA,EAMvB;MASP,IAAIhB,QAAQ,CAACiB,EAAE,KAAK,SAAS,IAAIjB,QAAQ,CAACkB,OAAO,IAAId,wBAAwB,EAAE;QAAA,IAAAe,WAAA,GAClD,IAAI,CAACC,KAAK;UAA7BC,KAAK,GAAAF,WAAA,CAALE,KAAK;UAAKC,IAAI,GAAAC,wBAAA,CAAAJ,WAAA;QACtB,OAAOpB,KAAA,CAAAyB,aAAA,CAACvB,uBAAuB,EAAAwB,QAAA,KAAKH,IAAI;UAAED,KAAK,EAAE,IAAK;UAACK,UAAU,EAAEzB,uBAAuB,CAAC0B,MAAM,CAAC,IAAI,CAACP,KAAK,CAACQ,UAAU,EAAE,IAAI,CAACR,KAAK,CAACS,UAAU,CAAE;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;UAAA;QAAA,IAC5IlC,KAAA,CAAAyB,aAAA,CAACrB,IAAI;UAACkB,KAAK,EAAEA,KAAM;UAAAS,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;UAAA;QAAA,GAAElC,KAAK,CAACmC,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACf,KAAK,CAACgB,QAAQ,CAAC,CAAQ,CAC7C;MAC9B;MAEA,OAAOrC,KAAA,CAAAyB,aAAA,CAACtB,gBAAgB,EAAAuB,QAAA,KAAK,IAAI,CAACL,KAAK;QAAAU,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,IAAG,IAAI,CAACb,KAAK,CAACgB,QAAQ,CAAoB;IACnF;EAAC;EAAA,OAAA/B,aAAA;AAAA,EAvBwCN,KAAK,CAACsC,SAAS;AAArChC,aAAa,CACzBiC,YAAY,GAAG;EACpBT,UAAU,EAAE,KAAK;EACjBD,UAAU,EAAE;AACd,CAAC;AAAA,SAJkBvB,aAAa,IAAAkC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}