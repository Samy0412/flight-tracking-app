{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-tabs/src/views/MaterialTopTabBar.js\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TabBar } from 'react-native-tab-view';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nvar TabBarTop = function (_React$PureComponent) {\n  _inherits(TabBarTop, _React$PureComponent);\n  function TabBarTop() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, TabBarTop);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarTop)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._renderLabel = function (_ref) {\n      var route = _ref.route;\n      var _this$props = _this.props,\n        position = _this$props.position,\n        navigation = _this$props.navigation,\n        activeTintColor = _this$props.activeTintColor,\n        inactiveTintColor = _this$props.inactiveTintColor,\n        showLabel = _this$props.showLabel,\n        upperCaseLabel = _this$props.upperCaseLabel,\n        labelStyle = _this$props.labelStyle,\n        allowFontScaling = _this$props.allowFontScaling;\n      if (showLabel === false) {\n        return null;\n      }\n      var routes = navigation.state.routes;\n      var index = routes.indexOf(route);\n      var focused = index === navigation.state.index;\n      var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n        return i;\n      })));\n      var outputRange = inputRange.map(function (inputIndex) {\n        return inputIndex === index ? activeTintColor : inactiveTintColor;\n      });\n      var color = position.interpolate({\n        inputRange: inputRange,\n        outputRange: outputRange\n      });\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n      var label = _this.props.getLabelText({\n        route: route\n      });\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          style: [styles.label, {\n            color: color\n          }, labelStyle],\n          allowFontScaling: allowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          }\n        }, upperCaseLabel ? label.toUpperCase() : label);\n      }\n      if (typeof label === 'function') {\n        return label({\n          focused: focused,\n          tintColor: tintColor\n        });\n      }\n      return label;\n    };\n    _this._renderIcon = function (_ref2) {\n      var route = _ref2.route;\n      var _this$props2 = _this.props,\n        position = _this$props2.position,\n        navigation = _this$props2.navigation,\n        activeTintColor = _this$props2.activeTintColor,\n        inactiveTintColor = _this$props2.inactiveTintColor,\n        renderIcon = _this$props2.renderIcon,\n        showIcon = _this$props2.showIcon,\n        iconStyle = _this$props2.iconStyle;\n      if (showIcon === false) {\n        return null;\n      }\n      var index = navigation.state.routes.indexOf(route);\n      var inputRange = [-1].concat(_toConsumableArray(navigation.state.routes.map(function (x, i) {\n        return i;\n      })));\n      var activeOpacity = position.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (i) {\n          return i === index ? 1 : 0;\n        })\n      });\n      var inactiveOpacity = position.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (i) {\n          return i === index ? 0 : 1;\n        })\n      });\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        navigation: navigation,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.icon, iconStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        }\n      });\n    };\n    return _this;\n  }\n  _createClass(TabBarTop, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        navigation = _this$props3.navigation,\n        renderIcon = _this$props3.renderIcon,\n        getLabelText = _this$props3.getLabelText,\n        rest = _objectWithoutProperties(_this$props3, [\"navigation\", \"renderIcon\", \"getLabelText\"]);\n      return React.createElement(TabBar, _extends({}, rest, {\n        navigationState: navigation.state,\n        renderIcon: this._renderIcon,\n        renderLabel: this._renderLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        }\n      }));\n    }\n  }]);\n  return TabBarTop;\n}(React.PureComponent);\nTabBarTop.defaultProps = {\n  activeTintColor: '#fff',\n  inactiveTintColor: '#fff',\n  showIcon: false,\n  showLabel: true,\n  upperCaseLabel: true,\n  allowFontScaling: true\n};\nexport { TabBarTop as default };\nvar styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 13,\n    margin: 8,\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Animated","StyleSheet","TabBar","CrossFadeIcon","TabBarTop","_React$PureComponent","_inherits","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_renderLabel","_ref","route","_this$props","props","position","navigation","activeTintColor","inactiveTintColor","showLabel","upperCaseLabel","labelStyle","allowFontScaling","routes","state","index","indexOf","focused","inputRange","_toConsumableArray","map","x","i","outputRange","inputIndex","color","interpolate","tintColor","label","getLabelText","createElement","Text","style","styles","__source","fileName","_jsxFileName","lineNumber","toUpperCase","_renderIcon","_ref2","_this$props2","renderIcon","showIcon","iconStyle","activeOpacity","inactiveOpacity","icon","_createClass","key","value","render","_this$props3","rest","_objectWithoutProperties","_extends","navigationState","renderLabel","PureComponent","defaultProps","default","create","height","width","textAlign","fontSize","margin","backgroundColor"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-tabs/src/views/MaterialTopTabBar.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { TabBar } from 'react-native-tab-view';\nimport CrossFadeIcon from './CrossFadeIcon';\n\nexport type TabBarOptions = {\n  activeTintColor?: string,\n  inactiveTintColor?: string,\n  showLabel?: boolean,\n  showIcon?: boolean,\n  upperCaseLabel?: boolean,\n  labelStyle?: any,\n  iconStyle?: any,\n  allowFontScaling?: boolean,\n};\n\ntype Props = TabBarOptions & {\n  position: Animated.Value,\n  offsetX: Animated.Value,\n  panX: Animated.Value,\n  layout: any,\n  navigation: any,\n  renderIcon: (props: {\n    route: any,\n    focused: boolean,\n    tintColor: string,\n  }) => React.Node,\n  getLabelText: (props: { route: any }) => any,\n  getAccessibilityLabel: (props: { route: any }) => string,\n  getTestID: (props: { route: any }) => string,\n  useNativeDriver?: boolean,\n  jumpTo: (key: string) => any,\n};\n\nexport default class TabBarTop extends React.PureComponent<Props> {\n  static defaultProps = {\n    activeTintColor: '#fff',\n    inactiveTintColor: '#fff',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true,\n  };\n\n  _renderLabel = ({ route }) => {\n    const {\n      position,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      showLabel,\n      upperCaseLabel,\n      labelStyle,\n      allowFontScaling,\n    } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const { routes } = navigation.state;\n    const index = routes.indexOf(route);\n    const focused = index === navigation.state.index;\n\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const outputRange = inputRange.map(inputIndex =>\n      inputIndex === index ? activeTintColor : inactiveTintColor\n    );\n    const color = position.interpolate({\n      inputRange,\n      outputRange: outputRange,\n    });\n\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n    const label = this.props.getLabelText({ route });\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          style={[styles.label, { color }, labelStyle]}\n          allowFontScaling={allowFontScaling}\n        >\n          {upperCaseLabel ? label.toUpperCase() : label}\n        </Animated.Text>\n      );\n    }\n    if (typeof label === 'function') {\n      return label({ focused, tintColor });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({ route }) => {\n    const {\n      position,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      showIcon,\n      iconStyle,\n    } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    const index = navigation.state.routes.indexOf(route);\n\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...navigation.state.routes.map((x, i) => i)];\n    const activeOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => (i === index ? 1 : 0)),\n    });\n    const inactiveOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => (i === index ? 0 : 1)),\n    });\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        navigation={navigation}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[styles.icon, iconStyle]}\n      />\n    );\n  };\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const { navigation, renderIcon, getLabelText, ...rest } = this.props;\n\n    return (\n      /* $FlowFixMe */\n      <TabBar\n        {...rest}\n        navigationState={navigation.state}\n        renderIcon={this._renderIcon}\n        renderLabel={this._renderLabel}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 13,\n    margin: 8,\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}