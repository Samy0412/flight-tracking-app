{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-tabs/src/navigators/createMaterialTopTabNavigator.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TabView, PagerPan } from 'react-native-tab-view';\nimport createTabNavigator from \"../utils/createTabNavigator\";\nimport MaterialTopTabBar from \"../views/MaterialTopTabBar\";\nimport ResourceSavingScene from \"../views/ResourceSavingScene\";\nvar MaterialTabView = function (_React$PureComponent) {\n  _inherits(MaterialTabView, _React$PureComponent);\n  function MaterialTabView() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, MaterialTabView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MaterialTabView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      index: 0,\n      isSwiping: false,\n      loaded: [_this.props.navigation.state.index],\n      transitioningFromIndex: null\n    };\n    _this._renderIcon = function (_ref) {\n      var focused = _ref.focused,\n        route = _ref.route,\n        tintColor = _ref.tintColor;\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      if (options.tabBarIcon) {\n        return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({\n          tintColor: tintColor,\n          focused: focused\n        }) : options.tabBarIcon;\n      }\n      return null;\n    };\n    _this._renderTabBar = function (props) {\n      var state = _this.props.navigation.state;\n      var route = state.routes[state.index];\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;\n      var _this$props = _this.props,\n        _this$props$tabBarCom = _this$props.tabBarComponent,\n        TabBarComponent = _this$props$tabBarCom === void 0 ? MaterialTopTabBar : _this$props$tabBarCom,\n        tabBarPosition = _this$props.tabBarPosition,\n        tabBarOptions = _this$props.tabBarOptions;\n      if (TabBarComponent === null || !tabBarVisible) {\n        return null;\n      }\n      return React.createElement(TabBarComponent, _extends({}, tabBarOptions, props, {\n        tabBarPosition: tabBarPosition,\n        screenProps: _this.props.screenProps,\n        navigation: _this.props.navigation,\n        getLabelText: _this.props.getLabelText,\n        getAccessibilityLabel: _this.props.getAccessibilityLabel,\n        getTestID: _this.props.getTestID,\n        renderIcon: _this._renderIcon,\n        onTabPress: _this.props.onTabPress,\n        onTabLongPress: _this.props.onTabLongPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }));\n    };\n    _this._renderPanPager = function (props) {\n      return React.createElement(PagerPan, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        }\n      }));\n    };\n    _this._handleAnimationEnd = function () {\n      var lazy = _this.props.lazy;\n      if (lazy) {\n        _this.setState({\n          transitioningFromIndex: null,\n          isSwiping: false\n        });\n      }\n    };\n    _this._handleSwipeStart = function () {\n      var _this$props2 = _this.props,\n        navigation = _this$props2.navigation,\n        lazy = _this$props2.lazy;\n      if (lazy) {\n        _this.setState({\n          isSwiping: true,\n          loaded: _toConsumableArray(new Set([].concat(_toConsumableArray(_this.state.loaded), [Math.max(navigation.state.index - 1, 0), Math.min(navigation.state.index + 1, navigation.state.routes.length - 1)])))\n        });\n      }\n    };\n    _this._handleIndexChange = function (index) {\n      var _this$props3 = _this.props,\n        animationEnabled = _this$props3.animationEnabled,\n        navigation = _this$props3.navigation,\n        onIndexChange = _this$props3.onIndexChange,\n        lazy = _this$props3.lazy;\n      if (lazy && animationEnabled) {\n        _this.setState({\n          transitioningFromIndex: navigation.state.index || 0\n        });\n      }\n      onIndexChange(index);\n    };\n    _this._mustBeVisible = function (_ref2) {\n      var index = _ref2.index,\n        focused = _ref2.focused;\n      var _this$props4 = _this.props,\n        animationEnabled = _this$props4.animationEnabled,\n        navigation = _this$props4.navigation;\n      var _this$state = _this.state,\n        isSwiping = _this$state.isSwiping,\n        transitioningFromIndex = _this$state.transitioningFromIndex;\n      if (isSwiping) {\n        var isSibling = navigation.state.index === index - 1 || navigation.state.index === index + 1;\n        if (isSibling) {\n          return true;\n        }\n      }\n      if (animationEnabled && transitioningFromIndex === index) {\n        return true;\n      }\n      return focused;\n    };\n    _this._renderScene = function (_ref3) {\n      var route = _ref3.route;\n      var _this$props5 = _this.props,\n        renderScene = _this$props5.renderScene,\n        descriptors = _this$props5.descriptors,\n        lazy = _this$props5.lazy,\n        optimizationsEnabled = _this$props5.optimizationsEnabled;\n      if (lazy) {\n        var loaded = _this.state.loaded;\n        var routes = _this.props.navigation.state.routes;\n        var index = routes.findIndex(function (_ref4) {\n          var key = _ref4.key;\n          return key === route.key;\n        });\n        var navigation = descriptors[route.key].navigation;\n        var mustBeVisible = _this._mustBeVisible({\n          index: index,\n          focused: navigation.isFocused()\n        });\n        if (!loaded.includes(index) && !mustBeVisible) {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            }\n          });\n        }\n        if (optimizationsEnabled) {\n          return React.createElement(ResourceSavingScene, {\n            isVisible: mustBeVisible,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            }\n          }, renderScene({\n            route: route\n          }));\n        }\n      }\n      return renderScene({\n        route: route\n      });\n    };\n    return _this;\n  }\n  _createClass(MaterialTabView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n        navigation = _this$props6.navigation,\n        animationEnabled = _this$props6.animationEnabled,\n        renderScene = _this$props6.renderScene,\n        onIndexChange = _this$props6.onIndexChange,\n        rest = _objectWithoutProperties(_this$props6, [\"navigation\", \"animationEnabled\", \"renderScene\", \"onIndexChange\"]);\n      var renderPager = rest.renderPager;\n      var state = this.props.navigation.state;\n      var route = state.routes[state.index];\n      var descriptors = this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      var swipeEnabled = options.swipeEnabled == null ? this.props.swipeEnabled : options.swipeEnabled;\n      if (typeof swipeEnabled === 'function') {\n        swipeEnabled = swipeEnabled(state);\n      }\n      if (animationEnabled === false && swipeEnabled === false) {\n        renderPager = this._renderPanPager;\n      }\n      return React.createElement(TabView, _extends({}, rest, {\n        navigationState: navigation.state,\n        animationEnabled: animationEnabled,\n        swipeEnabled: swipeEnabled,\n        onAnimationEnd: this._handleAnimationEnd,\n        onIndexChange: this._handleIndexChange,\n        onSwipeStart: this._handleSwipeStart,\n        renderPager: renderPager,\n        renderTabBar: this._renderTabBar,\n        renderScene: this._renderScene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var index = nextProps.navigation.state.index;\n      if (prevState.index === index) {\n        return null;\n      }\n      return {\n        loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [index]),\n        index: index\n      };\n    }\n  }]);\n  return MaterialTabView;\n}(React.PureComponent);\nMaterialTabView.defaultProps = {\n  initialLayout: Platform.select({\n    android: {\n      width: 1,\n      height: 0\n    }\n  }),\n  animationEnabled: true,\n  lazy: false,\n  optimizationsEnabled: false\n};\nexport default createTabNavigator(MaterialTabView);","map":{"version":3,"names":["React","View","Platform","TabView","PagerPan","createTabNavigator","MaterialTopTabBar","ResourceSavingScene","MaterialTabView","_React$PureComponent","_inherits","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","index","isSwiping","loaded","props","navigation","transitioningFromIndex","_renderIcon","_ref","focused","route","tintColor","descriptors","descriptor","key","options","tabBarIcon","_renderTabBar","routes","tabBarVisible","_this$props","_this$props$tabBarCom","tabBarComponent","TabBarComponent","tabBarPosition","tabBarOptions","createElement","_extends","screenProps","getLabelText","getAccessibilityLabel","getTestID","renderIcon","onTabPress","onTabLongPress","__source","fileName","_jsxFileName","lineNumber","_renderPanPager","_handleAnimationEnd","lazy","setState","_handleSwipeStart","_this$props2","_toConsumableArray","Set","Math","max","min","_handleIndexChange","_this$props3","animationEnabled","onIndexChange","_mustBeVisible","_ref2","_this$props4","_this$state","isSibling","_renderScene","_ref3","_this$props5","renderScene","optimizationsEnabled","findIndex","_ref4","mustBeVisible","isFocused","includes","isVisible","_createClass","value","render","_this$props6","rest","_objectWithoutProperties","renderPager","swipeEnabled","navigationState","onAnimationEnd","onSwipeStart","renderTabBar","getDerivedStateFromProps","nextProps","prevState","PureComponent","defaultProps","initialLayout","select","android","width","height"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/react-navigation-tabs/src/navigators/createMaterialTopTabNavigator.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, Platform } from 'react-native';\nimport { TabView, PagerPan } from 'react-native-tab-view';\nimport createTabNavigator, {\n  type InjectedProps,\n} from '../utils/createTabNavigator';\nimport MaterialTopTabBar, {\n  type TabBarOptions,\n} from '../views/MaterialTopTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\n\ntype Props = InjectedProps & {\n  animationEnabled?: boolean,\n  lazy?: boolean,\n  optimizationsEnabled?: boolean,\n  swipeEnabled?: boolean,\n  renderPager?: (props: *) => React.Node,\n  tabBarComponent?: React.ComponentType<*>,\n  tabBarOptions?: TabBarOptions,\n  tabBarPosition?: 'top' | 'bottom',\n};\n\ntype State = {\n  index: number,\n  isSwiping: boolean,\n  loaded: Array<number>,\n  transitioningFromIndex: ?number,\n};\n\nclass MaterialTabView extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    // fix for https://github.com/react-native-community/react-native-tab-view/issues/312\n    initialLayout: Platform.select({\n      android: { width: 1, height: 0 },\n    }),\n    animationEnabled: true,\n    lazy: false,\n    optimizationsEnabled: false,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { index } = nextProps.navigation.state;\n\n    if (prevState.index === index) {\n      return null;\n    }\n\n    return {\n      loaded: prevState.loaded.includes(index)\n        ? prevState.loaded\n        : [...prevState.loaded, index],\n      index,\n    };\n  }\n\n  state = {\n    index: 0,\n    isSwiping: false,\n    loaded: [this.props.navigation.state.index],\n    transitioningFromIndex: null,\n  };\n\n  _renderIcon = ({ focused, route, tintColor }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarIcon) {\n      return typeof options.tabBarIcon === 'function'\n        ? options.tabBarIcon({ tintColor, focused })\n        : options.tabBarIcon;\n    }\n\n    return null;\n  };\n\n  _renderTabBar = props => {\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    const tabBarVisible =\n      options.tabBarVisible == null ? true : options.tabBarVisible;\n\n    const {\n      tabBarComponent: TabBarComponent = MaterialTopTabBar,\n      tabBarPosition,\n      tabBarOptions,\n    } = this.props;\n\n    if (TabBarComponent === null || !tabBarVisible) {\n      return null;\n    }\n\n    return (\n      /* $FlowFixMe */\n      <TabBarComponent\n        {...tabBarOptions}\n        {...props}\n        tabBarPosition={tabBarPosition}\n        screenProps={this.props.screenProps}\n        navigation={this.props.navigation}\n        getLabelText={this.props.getLabelText}\n        getAccessibilityLabel={this.props.getAccessibilityLabel}\n        getTestID={this.props.getTestID}\n        renderIcon={this._renderIcon}\n        onTabPress={this.props.onTabPress}\n        onTabLongPress={this.props.onTabLongPress}\n      />\n    );\n  };\n\n  _renderPanPager = props => <PagerPan {...props} />;\n\n  _handleAnimationEnd = () => {\n    const { lazy } = this.props;\n\n    if (lazy) {\n      this.setState({\n        transitioningFromIndex: null,\n        isSwiping: false,\n      });\n    }\n  };\n\n  _handleSwipeStart = () => {\n    const { navigation, lazy } = this.props;\n\n    if (lazy) {\n      this.setState({\n        isSwiping: true,\n        loaded: [\n          ...new Set([\n            ...this.state.loaded,\n            Math.max(navigation.state.index - 1, 0),\n            Math.min(\n              navigation.state.index + 1,\n              navigation.state.routes.length - 1\n            ),\n          ]),\n        ],\n      });\n    }\n  };\n\n  _handleIndexChange = index => {\n    const { animationEnabled, navigation, onIndexChange, lazy } = this.props;\n\n    if (lazy && animationEnabled) {\n      this.setState({\n        transitioningFromIndex: navigation.state.index || 0,\n      });\n    }\n\n    onIndexChange(index);\n  };\n\n  _mustBeVisible = ({ index, focused }) => {\n    const { animationEnabled, navigation } = this.props;\n    const { isSwiping, transitioningFromIndex } = this.state;\n\n    if (isSwiping) {\n      const isSibling =\n        navigation.state.index === index - 1 ||\n        navigation.state.index === index + 1;\n\n      if (isSibling) {\n        return true;\n      }\n    }\n\n    // The previous tab should remain visible while transitioning\n    if (animationEnabled && transitioningFromIndex === index) {\n      return true;\n    }\n\n    return focused;\n  };\n\n  _renderScene = ({ route }) => {\n    const { renderScene, descriptors, lazy, optimizationsEnabled } = this.props;\n\n    if (lazy) {\n      const { loaded } = this.state;\n      const { routes } = this.props.navigation.state;\n      const index = routes.findIndex(({ key }) => key === route.key);\n      const { navigation } = descriptors[route.key];\n\n      const mustBeVisible = this._mustBeVisible({\n        index,\n        focused: navigation.isFocused(),\n      });\n\n      if (!loaded.includes(index) && !mustBeVisible) {\n        return <View />;\n      }\n\n      if (optimizationsEnabled) {\n        return (\n          <ResourceSavingScene isVisible={mustBeVisible}>\n            {renderScene({ route })}\n          </ResourceSavingScene>\n        );\n      }\n    }\n\n    return renderScene({ route });\n  };\n\n  render() {\n    const {\n      navigation,\n      animationEnabled,\n      // eslint-disable-next-line no-unused-vars\n      renderScene,\n      // eslint-disable-next-line no-unused-vars\n      onIndexChange,\n      ...rest\n    } = this.props;\n\n    let renderPager = rest.renderPager;\n\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    let swipeEnabled =\n      options.swipeEnabled == null\n        ? this.props.swipeEnabled\n        : options.swipeEnabled;\n\n    if (typeof swipeEnabled === 'function') {\n      swipeEnabled = swipeEnabled(state);\n    }\n\n    if (animationEnabled === false && swipeEnabled === false) {\n      renderPager = this._renderPanPager;\n    }\n\n    return (\n      <TabView\n        {...rest}\n        navigationState={navigation.state}\n        animationEnabled={animationEnabled}\n        swipeEnabled={swipeEnabled}\n        onAnimationEnd={this._handleAnimationEnd}\n        onIndexChange={this._handleIndexChange}\n        onSwipeStart={this._handleSwipeStart}\n        renderPager={renderPager}\n        renderTabBar={this._renderTabBar}\n        renderScene={\n          /* $FlowFixMe */\n          this._renderScene\n        }\n      />\n    );\n  }\n}\n\nexport default createTabNavigator(MaterialTabView);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}