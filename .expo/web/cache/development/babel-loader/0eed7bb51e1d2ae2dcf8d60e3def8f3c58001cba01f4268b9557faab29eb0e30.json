{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/sammerinio/Documents/flight-tracking-app/node_modules/@react-navigation/native/dist/ResourceSavingSceneView.js\";\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SceneView } from '@react-navigation/core';\nvar FAR_FAR_AWAY = 3000;\nvar ResourceSavingSceneView = function (_React$PureComponent) {\n  _inherits(ResourceSavingSceneView, _React$PureComponent);\n  _createClass(ResourceSavingSceneView, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isFocused && !prevState.awake) {\n        return {\n          awake: true\n        };\n      } else {\n        return null;\n      }\n    }\n  }]);\n  function ResourceSavingSceneView(props) {\n    var _this;\n    _classCallCheck(this, ResourceSavingSceneView);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceSavingSceneView).call(this));\n    _this._mustAlwaysBeVisible = function () {\n      return _this.props.animationEnabled || _this.props.swipeEnabled;\n    };\n    _this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n    return _this;\n  }\n  _createClass(ResourceSavingSceneView, [{\n    key: \"render\",\n    value: function render() {\n      var awake = this.state.awake;\n      var _this$props = this.props,\n        isFocused = _this$props.isFocused,\n        childNavigation = _this$props.childNavigation,\n        removeClippedSubviews = _this$props.removeClippedSubviews,\n        rest = _objectWithoutProperties(_this$props, [\"isFocused\", \"childNavigation\", \"removeClippedSubviews\"]);\n      return React.createElement(View, {\n        style: styles.container,\n        collapsable: false,\n        removeClippedSubviews: Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, React.createElement(View, {\n        style: this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        }\n      }, awake ? React.createElement(SceneView, _extends({}, rest, {\n        navigation: childNavigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      })) : null));\n    }\n  }]);\n  return ResourceSavingSceneView;\n}(React.PureComponent);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\nexport default ResourceSavingSceneView;","map":{"version":3,"names":["React","Platform","StyleSheet","View","SceneView","FAR_FAR_AWAY","ResourceSavingSceneView","_React$PureComponent","_inherits","_createClass","key","value","getDerivedStateFromProps","nextProps","prevState","isFocused","awake","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","_mustAlwaysBeVisible","animationEnabled","swipeEnabled","state","lazy","render","_this$props","childNavigation","removeClippedSubviews","rest","_objectWithoutProperties","createElement","style","styles","container","collapsable","OS","__source","fileName","_jsxFileName","lineNumber","innerAttached","innerDetached","_extends","navigation","PureComponent","create","flex","overflow","top"],"sources":["/Users/sammerinio/Documents/flight-tracking-app/node_modules/@react-navigation/native/dist/ResourceSavingSceneView.js"],"sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { SceneView } from '@react-navigation/core';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return { awake: true };\n    } else {\n      return null;\n    }\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n  }\n\n  render() {\n    const { awake } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      removeClippedSubviews,\n      ...rest\n    } = this.props;\n\n    return <View style={styles.container} collapsable={false} removeClippedSubviews={Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews}>\n        <View style={this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached}>\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\n        </View>\n      </View>;\n  }\n\n  _mustAlwaysBeVisible = () => {\n    return this.props.animationEnabled || this.props.swipeEnabled;\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\n\nexport default ResourceSavingSceneView;"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,SAAS,QAAQ,wBAAwB;AAElD,IAAMC,YAAY,GAAG,IAAI;AAAC,IAEpBC,uBAAuB,aAAAC,oBAAA;EAAAC,SAAA,CAAAF,uBAAA,EAAAC,oBAAA;EAAAE,YAAA,CAAAH,uBAAA;IAAAI,GAAA;IAAAC,KAAA,WAAAC,yBACKC,SAAS,EAAEC,SAAS,EAAE;MACpD,IAAID,SAAS,CAACE,SAAS,IAAI,CAACD,SAAS,CAACE,KAAK,EAAE;QAC3C,OAAO;UAAEA,KAAK,EAAE;QAAK,CAAC;MACxB,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF;EAAC;EAED,SAAAV,wBAAYW,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAb,uBAAA;IACjBY,KAAA,GAAAE,0BAAA,OAAAC,eAAA,CAAAf,uBAAA,EAAAgB,IAAA;IAAQJ,KAAA,CAuBVK,oBAAoB,GAAG,YAAM;MAC3B,OAAOL,KAAA,CAAKD,KAAK,CAACO,gBAAgB,IAAIN,KAAA,CAAKD,KAAK,CAACQ,YAAY;IAC/D,CAAC;IAvBCP,KAAA,CAAKQ,KAAK,GAAG;MACXV,KAAK,EAAEC,KAAK,CAACU,IAAI,GAAGV,KAAK,CAACF,SAAS,GAAG;IACxC,CAAC;IAAC,OAAAG,KAAA;EACJ;EAACT,YAAA,CAAAH,uBAAA;IAAAI,GAAA;IAAAC,KAAA,WAAAiB,OAAA,EAEQ;MAAA,IACCZ,KAAK,GAAK,IAAI,CAACU,KAAK,CAApBV,KAAK;MAAA,IAAAa,WAAA,GAMT,IAAI,CAACZ,KAAK;QAJZF,SAAS,GAAAc,WAAA,CAATd,SAAS;QACTe,eAAe,GAAAD,WAAA,CAAfC,eAAe;QACfC,qBAAqB,GAAAF,WAAA,CAArBE,qBAAqB;QAClBC,IAAI,GAAAC,wBAAA,CAAAJ,WAAA;MAGT,OAAO7B,KAAA,CAAAkC,aAAA,CAAC/B,IAAI;QAACgC,KAAK,EAAEC,MAAM,CAACC,SAAU;QAACC,WAAW,EAAE,KAAM;QAACP,qBAAqB,EAAE9B,QAAQ,CAACsC,EAAE,KAAK,SAAS,GAAGR,qBAAqB,GAAG,CAAChB,SAAS,IAAIgB,qBAAsB;QAAAS,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GACrK3C,KAAA,CAAAkC,aAAA,CAAC/B,IAAI;QAACgC,KAAK,EAAE,IAAI,CAACZ,oBAAoB,EAAE,IAAIR,SAAS,GAAGqB,MAAM,CAACQ,aAAa,GAAGR,MAAM,CAACS,aAAc;QAAAL,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GACjG3B,KAAK,GAAGhB,KAAA,CAAAkC,aAAA,CAAC9B,SAAS,EAAA0C,QAAA,KAAKd,IAAI;QAAEe,UAAU,EAAEjB,eAAgB;QAAAU,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAAG,GAAG,IAAI,CAC/D,CACF;IACX;EAAC;EAAA,OAAArC,uBAAA;AAAA,EA/BmCN,KAAK,CAACgD,aAAa;AAsCzD,IAAMZ,MAAM,GAAGlC,UAAU,CAAC+C,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC;EACDP,aAAa,EAAE;IACbM,IAAI,EAAE;EACR,CAAC;EACDL,aAAa,EAAE;IACbK,IAAI,EAAE,CAAC;IACPE,GAAG,EAAE/C;EACP;AACF,CAAC,CAAC;AAEF,eAAeC,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}